<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="b46fdc96-500b-420f-9518-1217997db555" activeEnvironment="Default" name="EbMSMTOM" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="ad078522-c95e-41b9-91eb-c84854b02ccc" wsaVersion="NONE" name="EbMSMessageServiceSoapBinding" type="wsdl" bindingName="{http://www.ordina.nl/ebms/2.18}EbMSMessageServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/service/ebmsMTOM?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/service/ebmsMTOM?wsdl"><con:part><con:url>http://localhost:8080/service/ebmsMTOM?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="EbMSMessageService" targetNamespace="http://www.ordina.nl/ebms/2.18" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.ordina.nl/ebms/2.18" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.ordina.nl/ebms/2.18" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime">
      <xs:import namespace="http://www.w3.org/2005/05/xmlmime"/>
      <xs:element name="getMessage" type="tns:getMessage"/>
      <xs:element name="getMessageResponse" type="tns:getMessageResponse"/>
      <xs:element name="getMessageStatus" type="tns:getMessageStatus"/>
      <xs:element name="getMessageStatusResponse" type="tns:getMessageStatusResponse"/>
      <xs:element name="getUnprocessedMessageEvents" type="tns:getUnprocessedMessageEvents"/>
      <xs:element name="getUnprocessedMessageEventsResponse" type="tns:getUnprocessedMessageEventsResponse"/>
      <xs:element name="getUnprocessedMessageIds" type="tns:getUnprocessedMessageIds"/>
      <xs:element name="getUnprocessedMessageIdsResponse" type="tns:getUnprocessedMessageIdsResponse"/>
      <xs:element name="ping" type="tns:ping"/>
      <xs:element name="pingResponse" type="tns:pingResponse"/>
      <xs:element name="processMessage" type="tns:processMessage"/>
      <xs:element name="processMessageEvent" type="tns:processMessageEvent"/>
      <xs:element name="processMessageEventResponse" type="tns:processMessageEventResponse"/>
      <xs:element name="processMessageResponse" type="tns:processMessageResponse"/>
      <xs:element name="resendMessage" type="tns:resendMessage"/>
      <xs:element name="resendMessageResponse" type="tns:resendMessageResponse"/>
      <xs:element name="sendMessage" type="tns:sendMessage"/>
      <xs:element name="sendMessageResponse" type="tns:sendMessageResponse"/>
      <xs:complexType name="getMessageStatus">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getMessageStatusResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageStatus" type="tns:messageStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageStatus">
        <xs:sequence>
          <xs:element name="timestamp" type="tns:instant"/>
          <xs:element name="status" type="tns:ebMSMessageStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="instant">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getUnprocessedMessageEvents">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageFilter" type="tns:messageFilter"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="eventType" type="tns:messageEventType"/>
          <xs:element minOccurs="0" name="maxNr" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="cpaId" type="xs:string"/>
          <xs:element minOccurs="0" name="fromParty" type="tns:party"/>
          <xs:element minOccurs="0" name="toParty" type="tns:party"/>
          <xs:element minOccurs="0" name="service" type="xs:string"/>
          <xs:element minOccurs="0" name="action" type="xs:string"/>
          <xs:element minOccurs="0" name="conversationId" type="xs:string"/>
          <xs:element minOccurs="0" name="messageId" type="xs:string"/>
          <xs:element minOccurs="0" name="refToMessageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="party">
        <xs:sequence>
          <xs:element name="partyId" type="xs:string"/>
          <xs:element name="role" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUnprocessedMessageEventsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageEvents" type="tns:messageEvent"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageEvent">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
          <xs:element name="type" type="tns:messageEventType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getMessage">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
          <xs:element minOccurs="0" name="process" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getMessageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="tns:Message"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Message">
        <xs:sequence>
          <xs:element name="properties" type="tns:messageProperties"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="dataSource" type="tns:DataSource"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageProperties">
        <xs:sequence>
          <xs:element name="cpaId" type="xs:string"/>
          <xs:element name="fromParty" type="tns:party"/>
          <xs:element name="toParty" type="tns:party"/>
          <xs:element name="service" type="xs:string"/>
          <xs:element name="action" type="xs:string"/>
          <xs:element name="timestamp" type="xs:dateTime"/>
          <xs:element name="conversationId" type="xs:string"/>
          <xs:element name="messageId" type="xs:string"/>
          <xs:element minOccurs="0" name="refToMessageId" type="xs:string"/>
          <xs:element name="messageStatus" type="tns:ebMSMessageStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DataSource">
        <xs:sequence>
          <xs:element minOccurs="0" name="contentId" type="xs:string"/>
          <xs:element name="attachment" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resendMessage">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resendMessageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendMessage">
        <xs:sequence>
          <xs:element name="message" type="tns:MessageRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessageRequest">
        <xs:sequence>
          <xs:element name="properties" type="tns:messageRequestProperties"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="dataSource" type="tns:DataSource"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageRequestProperties">
        <xs:sequence>
          <xs:element name="cpaId" type="xs:string"/>
          <xs:element name="fromParty" type="tns:party"/>
          <xs:element minOccurs="0" name="toParty" type="tns:party"/>
          <xs:element name="service" type="xs:string"/>
          <xs:element name="action" type="xs:string"/>
          <xs:element minOccurs="0" name="conversationId" type="xs:string"/>
          <xs:element minOccurs="0" name="messageId" type="xs:string"/>
          <xs:element minOccurs="0" name="refToMessageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendMessageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ping">
        <xs:sequence>
          <xs:element name="cpaId" type="xs:string"/>
          <xs:element name="fromPartyId" type="xs:string"/>
          <xs:element name="toPartyId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pingResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="processMessageEvent">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="processMessageEventResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getUnprocessedMessageIds">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageFilter" type="tns:messageFilter"/>
          <xs:element minOccurs="0" name="maxNr" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUnprocessedMessageIdsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageIds" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="processMessage">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="processMessageResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:simpleType name="ebMSMessageStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNAUTHORIZED"/>
          <xs:enumeration value="NOT_RECOGNIZED"/>
          <xs:enumeration value="RECEIVED"/>
          <xs:enumeration value="PROCESSED"/>
          <xs:enumeration value="FORWARDED"/>
          <xs:enumeration value="FAILED"/>
          <xs:enumeration value="CREATED"/>
          <xs:enumeration value="DELIVERY_FAILED"/>
          <xs:enumeration value="DELIVERED"/>
          <xs:enumeration value="EXPIRED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="messageEventType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="RECEIVED"/>
          <xs:enumeration value="DELIVERED"/>
          <xs:enumeration value="FAILED"/>
          <xs:enumeration value="EXPIRED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="EbMSMessageServiceException" type="tns:EbMSMessageServiceException"/>
      <xs:complexType name="EbMSMessageServiceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getMessageResponse">
    <wsdl:part element="tns:getMessageResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageStatus">
    <wsdl:part element="tns:getMessageStatus" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageStatusResponse">
    <wsdl:part element="tns:getMessageStatusResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessage">
    <wsdl:part element="tns:getMessage" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resendMessage">
    <wsdl:part element="tns:resendMessage" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendMessage">
    <wsdl:part element="tns:sendMessage" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ping">
    <wsdl:part element="tns:ping" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnprocessedMessageIds">
    <wsdl:part element="tns:getUnprocessedMessageIds" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnprocessedMessageEventsResponse">
    <wsdl:part element="tns:getUnprocessedMessageEventsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMessage">
    <wsdl:part element="tns:processMessage" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="EbMSMessageServiceException">
    <wsdl:part element="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendMessageResponse">
    <wsdl:part element="tns:sendMessageResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMessageEventResponse">
    <wsdl:part element="tns:processMessageEventResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnprocessedMessageIdsResponse">
    <wsdl:part element="tns:getUnprocessedMessageIdsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="pingResponse">
    <wsdl:part element="tns:pingResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnprocessedMessageEvents">
    <wsdl:part element="tns:getUnprocessedMessageEvents" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resendMessageResponse">
    <wsdl:part element="tns:resendMessageResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMessageResponse">
    <wsdl:part element="tns:processMessageResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMessageEvent">
    <wsdl:part element="tns:processMessageEvent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="EbMSMessageService">
    <wsdl:operation name="getMessageStatus">
      <wsdl:input message="tns:getMessageStatus" name="getMessageStatus"></wsdl:input>
      <wsdl:output message="tns:getMessageStatusResponse" name="getMessageStatusResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnprocessedMessageEvents">
      <wsdl:input message="tns:getUnprocessedMessageEvents" name="getUnprocessedMessageEvents"></wsdl:input>
      <wsdl:output message="tns:getUnprocessedMessageEventsResponse" name="getUnprocessedMessageEventsResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <wsdl:input message="tns:getMessage" name="getMessage"></wsdl:input>
      <wsdl:output message="tns:getMessageResponse" name="getMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resendMessage">
      <wsdl:input message="tns:resendMessage" name="resendMessage"></wsdl:input>
      <wsdl:output message="tns:resendMessageResponse" name="resendMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendMessage">
      <wsdl:input message="tns:sendMessage" name="sendMessage"></wsdl:input>
      <wsdl:output message="tns:sendMessageResponse" name="sendMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ping">
      <wsdl:input message="tns:ping" name="ping"></wsdl:input>
      <wsdl:output message="tns:pingResponse" name="pingResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="processMessageEvent">
      <wsdl:input message="tns:processMessageEvent" name="processMessageEvent"></wsdl:input>
      <wsdl:output message="tns:processMessageEventResponse" name="processMessageEventResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnprocessedMessageIds">
      <wsdl:input message="tns:getUnprocessedMessageIds" name="getUnprocessedMessageIds"></wsdl:input>
      <wsdl:output message="tns:getUnprocessedMessageIdsResponse" name="getUnprocessedMessageIdsResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="processMessage">
      <wsdl:input message="tns:processMessage" name="processMessage"></wsdl:input>
      <wsdl:output message="tns:processMessageResponse" name="processMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EbMSMessageServiceSoapBinding" type="tns:EbMSMessageService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getMessageStatus">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getMessageStatus">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageStatusResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnprocessedMessageEvents">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUnprocessedMessageEvents">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnprocessedMessageEventsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getMessage">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resendMessage">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="resendMessage">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="resendMessageResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendMessage">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sendMessage">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendMessageResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ping">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="ping">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="pingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="processMessageEvent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="processMessageEvent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="processMessageEventResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnprocessedMessageIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUnprocessedMessageIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnprocessedMessageIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="processMessage">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="processMessage">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="processMessageResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EbMSMessageService">
    <wsdl:port binding="tns:EbMSMessageServiceSoapBinding" name="EbMSMessagePort">
      <soap:address location="http://localhost:8080/service/ebmsMTOM"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint></con:endpoints><con:operation id="3164ab3e-7ea9-4f5a-aa8d-84dea4482ad6" isOneWay="false" action="" name="getMessage" bindingOperationName="getMessage" type="Request-Response" outputName="getMessageResponse" inputName="getMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0d300970-359a-47b1-8ccf-0d6b9bc66adf" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getMessage>
         <messageId>?</messageId>
      </ns:getMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.springframework.org/schema/beans/EbMSMessageService/GetMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="57fc1d6b-e193-4beb-aa2e-c1d5ddc33b8d" isOneWay="false" action="" name="getUnprocessedMessageEvents" bindingOperationName="getUnprocessedMessageEvents" type="Request-Response" outputName="getUnprocessedMessageEventsResponse" inputName="getUnprocessedMessageEvents" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b7670f5e-9062-4b98-bf3a-abbcb0e9c98a" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getUnprocessedMessageEvents/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.springframework.org/schema/beans/EbMSMessageService/GetMessageEvents"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="002d2dbd-3a2a-45b1-b38b-cbed09ba42ed" isOneWay="false" action="" name="getUnprocessedMessageIds" bindingOperationName="getUnprocessedMessageIds" type="Request-Response" outputName="getUnprocessedMessageIdsResponse" inputName="getUnprocessedMessageIds" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="46b40d8a-143e-4501-b344-7d57161d4d50" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getUnprocessedMessageIds/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.springframework.org/schema/beans/EbMSMessageService/GetMessageIds"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="e0b96fd7-35b2-448b-8c99-ac42593c66b1" isOneWay="false" action="" name="getMessageStatus" bindingOperationName="getMessageStatus" type="Request-Response" outputName="getMessageStatusResponse" inputName="getMessageStatus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bb62ac01-3ffd-4eed-b2b3-c7f365e4eeb0" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getMessageStatus>
         <messageId>?</messageId>
      </ns:getMessageStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.springframework.org/schema/beans/EbMSMessageService/GetMessageStatus"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="28e78f4e-ed41-4804-881a-cd68c41408ce" isOneWay="false" action="" name="ping" bindingOperationName="ping" type="Request-Response" outputName="pingResponse" inputName="ping" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bd674669-1381-47a3-a7d5-09fd8856782b" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:ping>
         <cpaId>cpaStubEBF.rm.https.signed</cpaId>
         <fromPartyId>urn:osb:oin:00000000000000000000</fromPartyId>
         <toPartyId>urn:osb:oin:00000000000000000001</toPartyId>
      </ns:ping>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.springframework.org/schema/beans/EbMSMessageService/Ping"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="fb585d68-8b2f-47c7-bfa8-8a9eb5ef3209" isOneWay="false" action="" name="processMessage" bindingOperationName="processMessage" type="Request-Response" outputName="processMessageResponse" inputName="processMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="73a7d75b-0774-4508-ae66-f87583f05830" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processMessage>
         <messageId>?</messageId>
      </ns:processMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.springframework.org/schema/beans/EbMSMessageService/ProcessMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="198fbb8e-bc16-4906-875b-5106526c6eaf" isOneWay="false" action="" name="processMessageEvent" bindingOperationName="processMessageEvent" type="Request-Response" outputName="processMessageEventResponse" inputName="processMessageEvent" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ad2caa33-6872-450c-9030-9729dbba1556" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processMessageEvent>
         <messageId>?</messageId>
      </ns:processMessageEvent>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.springframework.org/schema/beans/EbMSMessageService/ProcessMessageEvent"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f952b95c-fa81-434f-bfe0-dd456a15792f" isOneWay="false" action="" name="resendMessage" bindingOperationName="resendMessage" type="Request-Response" outputName="resendMessageResponse" inputName="resendMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7914558b-f1d3-4e0a-b549-c15a5051ea55" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:resendMessage>
         <messageId>?</messageId>
      </ns:resendMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.springframework.org/schema/beans/EbMSMessageService/ResendMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="bd2a999d-090d-4c47-aac2-82fa8833f530" isOneWay="false" action="" name="sendMessage" bindingOperationName="sendMessage" type="Request-Response" outputName="sendMessageResponse" inputName="sendMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="29b06526-ed4d-4f37-892c-9aec68f89c14" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="WsdlSettings@enable-mtom">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebmsMTOM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:sendMessage>
         <message>
            <properties>
               <cpaId>cpaStubEBF.rm.https.signed</cpaId>
               <fromParty>
                  <partyId>urn:osb:oin:00000000000000000000</partyId>
                  <role>DIGIPOORT</role>
               </fromParty>
               <toParty>
                  <partyId>urn:osb:oin:00000000000000000001</partyId>
                  <role>OVERHEID</role>
               </toParty>
               <service>urn:osb:services:osb:afleveren:1.1$1.0</service>
               <action>afleveren</action>
            </properties>
            <dataSource>
               <attachment>cid:790707908763</attachment>
            </dataSource>
         </message>
      </ns:sendMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>truststore.pem</con:name><con:contentType>application/octet-stream</con:contentType><con:size>887</con:size><con:contentId>790707908763</con:contentId><con:part>790707908763</con:part><con:data>UEsDBBQACAgIAFWxsFAAAAAAAAAAAAAAAAAOAAAAdHJ1c3RzdG9yZS5wZW1lU8mSokAQvfMVc+/oUBB0OPShNpClkJJF4MbSogKKIhb69YNOdExPdEXk5dWrl/myMt/fxwOJbji/EFn7hmYg4JMn+C5Qw0CxjxDIzyXgBgSlQfwOD+cHcGBZnXfVXlf5FAIWaABDkbKOIxbjkDGdcHMl+Jh4FAIdiAFBkJrrmXnLmrpPpLCna4MT8CIvCa+XeaP26UY5Jht5wK8ETihAcPJhpd4Tve5j/5vYQE0mDbdYus6ymXmh64pr/CWGyQBnxSzv4/Fe+CLYjdJRKEfYJwMdw8GEOzjnjngaMeOFjfGF8cInNgWVLjyzwR1FfsUHcgDsWdbYCB8FxT2TlDZrijo7/KsMDv/bFCj7zfHfpliEJ27erMdH5JtYN4o5XSY5l0JS7+mDJBTmLzEwUCYUoxu7+Ua4K32GETz++AWiAbCCBwZ4GVeojAkQraoQgtjugNnezHzSbd6KrB52yJ1Hx2nwWZ03MiJ5G29EQLZKurvuphmT3+rklBFdOoSPNQWCirW0ZduFCNJtFf1eH8gMx/u5+Xap5669MScr734JoO6JiJj5fGl6k97usqk0vfUNOnoC7DbVVne9FMJWTdLVpDFidWHug0tcc060Q6Z7y2OAwDgRwP85XMLTV8kQx+7Sujb9Qz7YFeHuDFXbla2+MdkedmUQLvSr24iRZVBHDoPPu+hUmhlA5SxwM4pFY3GuJ+E1sQ+h1Lg7T/SSilqFlii9b5HLxDr7qpY+9pnSWHIcrW5au8qxA2+tJUSS156W220ZNcWFDKzbtQZ+PE7bz2F6n1il3PQ1ZoHLw95IrtmxZh8fwmuNiIN/rtYfUEsHCKX1dZhuAgAAdwMAAFBLAQIUABQACAgIAFWxsFCl9XWYbgIAAHcDAAAOAAAAAAAAAAAAAAAAAAAAAAB0cnVzdHN0b3JlLnBlbVBLBQYAAAAAAQABADwAAACqAgAAAAA=</con:data><con:id>ca60b6bf-eac0-4d45-85f1-ade28031b5b7</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.springframework.org/schema/beans/EbMSMessageService/SendMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>