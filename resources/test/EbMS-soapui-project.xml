<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="2fc37c22-76d0-4392-8280-36f3b7d181fb" activeEnvironment="Default" name="EbMS" resourceRoot="" soapui-version="5.6.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="TestSuite EbMS Sync"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="TestCase EbMS"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="1515ca53-392d-47a7-80a5-8f3d4d0bf334" wsaVersion="NONE" name="CPAServiceSoapBinding" type="wsdl" bindingName="{http://www.ordina.nl/cpa/2.18}CPAServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/service/cpa?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/service/cpa?wsdl"><con:part><con:url>http://localhost:8080/service/cpa?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="CPAService" targetNamespace="http://www.ordina.nl/cpa/2.18" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.ordina.nl/cpa/2.18" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.ordina.nl/cpa/2.18" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="deleteCPA" type="tns:deleteCPA"/>
      <xs:element name="deleteCPAResponse" type="tns:deleteCPAResponse"/>
      <xs:element name="getCPA" type="tns:getCPA"/>
      <xs:element name="getCPAIds" type="tns:getCPAIds"/>
      <xs:element name="getCPAIdsResponse" type="tns:getCPAIdsResponse"/>
      <xs:element name="getCPAResponse" type="tns:getCPAResponse"/>
      <xs:element name="insertCPA" type="tns:insertCPA"/>
      <xs:element name="insertCPAResponse" type="tns:insertCPAResponse"/>
      <xs:element name="validateCPA" type="tns:validateCPA"/>
      <xs:element name="validateCPAResponse" type="tns:validateCPAResponse"/>
      <xs:complexType name="validateCPA">
        <xs:sequence>
          <xs:element name="cpa" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCPAResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="deleteCPA">
        <xs:sequence>
          <xs:element name="cpaId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCPAResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getCPA">
        <xs:sequence>
          <xs:element name="cpaId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCPAResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="cpa" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCPAIds">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getCPAIdsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cpaId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="insertCPA">
        <xs:sequence>
          <xs:element name="cpa" type="xs:string"/>
          <xs:element minOccurs="0" name="overwrite" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="insertCPAResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="cpaId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CPAServiceException" type="tns:CPAServiceException"/>
      <xs:complexType name="CPAServiceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getCPAIdsResponse">
    <wsdl:part element="tns:getCPAIdsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCPAResponse">
    <wsdl:part element="tns:validateCPAResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertCPA">
    <wsdl:part element="tns:insertCPA" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertCPAResponse">
    <wsdl:part element="tns:insertCPAResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CPAServiceException">
    <wsdl:part element="tns:CPAServiceException" name="CPAServiceException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCPAResponse">
    <wsdl:part element="tns:getCPAResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCPA">
    <wsdl:part element="tns:validateCPA" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCPA">
    <wsdl:part element="tns:deleteCPA" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCPAResponse">
    <wsdl:part element="tns:deleteCPAResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCPA">
    <wsdl:part element="tns:getCPA" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCPAIds">
    <wsdl:part element="tns:getCPAIds" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CPAService">
    <wsdl:operation name="validateCPA">
      <wsdl:input message="tns:validateCPA" name="validateCPA"></wsdl:input>
      <wsdl:output message="tns:validateCPAResponse" name="validateCPAResponse"></wsdl:output>
      <wsdl:fault message="tns:CPAServiceException" name="CPAServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCPA">
      <wsdl:input message="tns:deleteCPA" name="deleteCPA"></wsdl:input>
      <wsdl:output message="tns:deleteCPAResponse" name="deleteCPAResponse"></wsdl:output>
      <wsdl:fault message="tns:CPAServiceException" name="CPAServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCPA">
      <wsdl:input message="tns:getCPA" name="getCPA"></wsdl:input>
      <wsdl:output message="tns:getCPAResponse" name="getCPAResponse"></wsdl:output>
      <wsdl:fault message="tns:CPAServiceException" name="CPAServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCPAIds">
      <wsdl:input message="tns:getCPAIds" name="getCPAIds"></wsdl:input>
      <wsdl:output message="tns:getCPAIdsResponse" name="getCPAIdsResponse"></wsdl:output>
      <wsdl:fault message="tns:CPAServiceException" name="CPAServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="insertCPA">
      <wsdl:input message="tns:insertCPA" name="insertCPA"></wsdl:input>
      <wsdl:output message="tns:insertCPAResponse" name="insertCPAResponse"></wsdl:output>
      <wsdl:fault message="tns:CPAServiceException" name="CPAServiceException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CPAServiceSoapBinding" type="tns:CPAService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="validateCPA">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateCPA">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateCPAResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CPAServiceException">
        <soap:fault name="CPAServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCPA">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCPA">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCPAResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CPAServiceException">
        <soap:fault name="CPAServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCPA">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCPA">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCPAResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CPAServiceException">
        <soap:fault name="CPAServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCPAIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCPAIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCPAIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CPAServiceException">
        <soap:fault name="CPAServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="insertCPA">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="insertCPA">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="insertCPAResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CPAServiceException">
        <soap:fault name="CPAServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CPAService">
    <wsdl:port binding="tns:CPAServiceSoapBinding" name="CPAPort">
      <soap:address location="http://localhost:8080/service/cpa"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/ebms-adapter-web/service/cpa</con:endpoint><con:endpoint>http://localhost:8080/service/cpa</con:endpoint></con:endpoints><con:operation id="749daf65-d6a9-4966-b9a4-4d620d61b812" isOneWay="false" action="" name="deleteCPA" bindingOperationName="deleteCPA" type="Request-Response" outputName="deleteCPAResponse" inputName="deleteCPA" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b7d1ac92-a992-4444-b965-b8174f46d0c9" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/cpa</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:deleteCPA>
         <cpaId>?</cpaId>
      </ns:deleteCPA>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/cpa/2.10/CPAService/DeleteCPA"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6977a7d0-c77e-4ec4-8c2c-dbaf5a6c4a5e" isOneWay="false" action="" name="getCPA" bindingOperationName="getCPA" type="Request-Response" outputName="getCPAResponse" inputName="getCPA" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="27fc996f-6244-427e-952d-5e5beb93340d" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/cpa</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getCPA>
         <cpaId>CPA_EBFStub</cpaId>
      </ns:getCPA>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/cpa/2.10/CPAService/GetCPA"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ad8ddf03-d52c-45a7-9ea3-a8bb32b1db2b" isOneWay="false" action="" name="getCPAIds" bindingOperationName="getCPAIds" type="Request-Response" outputName="getCPAIdsResponse" inputName="getCPAIds" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8fa3b4c4-202b-4a2b-a6e8-9de21cde0474" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/cpa</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getCPAIds/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/cpa/2.10/CPAService/GetCPAIds"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="64dd0667-8b83-4100-a5f0-00adb539a455" isOneWay="false" action="" name="insertCPA" bindingOperationName="insertCPA" type="Request-Response" outputName="insertCPAResponse" inputName="insertCPA" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fb00b7d0-d8c4-4d4b-aa3f-114dad73956a" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/cpa</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:insertCPA>
         <cpa><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<tns:CollaborationProtocolAgreement xmlns:axsl="http://www.w3.org/1999/XSL/TransformAlias" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:functx="http://www.functx.com" xmlns:tns="http://www.oasis-open.org/committees/ebxml-cppa/schema/cpp-cpa-2_0.xsd" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.oasis-open.org/committees/ebxml-cppa/schema/cpp-cpa-2_0.xsd http://www.oasis-open.org/committees/ebxml-cppa/schema/cpp-cpa-2_0.xsd" tns:cpaid="cpaStubEBF.rm.http.unsigned.sync" tns:version="1.0">
	<tns:Status tns:value="agreed" />
	<tns:Start>2011-01-01T00:00:00Z</tns:Start>
	<tns:End>2021-01-01T00:00:00Z</tns:End>
	<tns:PartyInfo tns:partyName="Logius" tns:defaultMshChannelId="DIGIPOORT_defaultDeliveryChannel_ProfileBestEffortSigned" tns:defaultMshPackageId="MshSignalPackage">
		<tns:PartyId tns:type="urn:osb:oin">00000000000000000000</tns:PartyId>
		<tns:PartyRef xlink:href="" />
		<tns:CollaborationRole>
			<tns:ProcessSpecification tns:name="afleveren" tns:version="1.0" xlink:href="http://www.overheidsservicebus.nl/osr/Afleveren" tns:uuid="urn:overheidsservicebus.nl:osr:Afleveren:OsbAfleveren11$10" />
			<tns:Role tns:name="DIGIPOORT" xlink:href="http://www.overheidsservicebus.nl/osr/" />
			<tns:ServiceBinding>
				<tns:Service tns:type="urn:osb:services">osb:afleveren:1.1$1.0</tns:Service>
				<tns:CanSend>
					<tns:ThisPartyActionBinding tns:id="DIGIPOORT_S_Afleveren" tns:action="afleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>OVERHEID_R_Afleveren</tns:OtherPartyActionBinding>
				</tns:CanSend>
				<tns:CanReceive>
					<tns:ThisPartyActionBinding tns:id="DIGIPOORT_R_BevestigAfleveren" tns:action="bevestigAfleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>OVERHEID_S_BevestigAfleveren</tns:OtherPartyActionBinding>
				</tns:CanReceive>
			</tns:ServiceBinding>
		</tns:CollaborationRole>
		<tns:CollaborationRole>
			<tns:ProcessSpecification tns:name="aanleveren" tns:version="1.0" xlink:href="http://www.overheidsservicebus.nl/osr/Aanleveren" tns:uuid="urn:overheidsservicebus.nl:osr:Aanleveren:OsbAanleveren10$10" />
			<tns:Role tns:name="DIGIPOORT" xlink:href="http://www.overheidsservicebus.nl/osr/" />
			<tns:ServiceBinding>
				<tns:Service tns:type="urn:osb:services">osb:aanleveren:1.1$1.0</tns:Service>
				<tns:CanSend>
					<tns:ThisPartyActionBinding tns:id="DIGIPOORT_S_BevestigAanleveren" tns:action="bevestigAanleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>OVERHEID_R_BevestigAanleveren</tns:OtherPartyActionBinding>
				</tns:CanSend>
				<tns:CanReceive>
					<tns:ThisPartyActionBinding tns:id="DIGIPOORT_R_Aanleveren" tns:action="aanleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>OVERHEID_S_Aanleveren</tns:OtherPartyActionBinding>
				</tns:CanReceive>
			</tns:ServiceBinding>
		</tns:CollaborationRole>
		<tns:DeliveryChannel tns:channelId="DIGIPOORT_defaultDeliveryChannel_ProfileBestEffortSigned" tns:docExchangeId="DIGIPOORT_BestEffort" tns:transportId="DIGIPOORT_transport_HTTP">
			<tns:MessagingCharacteristics tns:syncReplyMode="signalsAndResponse" tns:ackRequested="never" tns:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" tns:ackSignatureRequested="never" tns:duplicateElimination="never" />
		</tns:DeliveryChannel>
		<tns:DeliveryChannel tns:channelId="DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging" tns:docExchangeId="DIGIPOORT_ReliableMessaging" tns:transportId="DIGIPOORT_transport_HTTP">
			<tns:MessagingCharacteristics tns:syncReplyMode="signalsAndResponse" tns:ackRequested="always" tns:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" tns:ackSignatureRequested="never" tns:duplicateElimination="always" />
		</tns:DeliveryChannel>
		<tns:Transport tns:transportId="DIGIPOORT_transport_HTTP">
			<tns:TransportSender>
				<tns:TransportProtocol tns:version="1.1">HTTP</tns:TransportProtocol>
			</tns:TransportSender>
			<tns:TransportReceiver>
				<tns:TransportProtocol tns:version="1.1">HTTP</tns:TransportProtocol>
				<tns:Endpoint tns:uri="http://localhost:8888/ebms" tns:type="allPurpose" />
			</tns:TransportReceiver>
		</tns:Transport>
		<tns:DocExchange tns:docExchangeId="DIGIPOORT_BestEffort">
			<tns:ebXMLSenderBinding tns:version="2.0" />
			<tns:ebXMLReceiverBinding tns:version="2.0" />
		</tns:DocExchange>
		<tns:DocExchange tns:docExchangeId="DIGIPOORT_ReliableMessaging">
			<tns:ebXMLSenderBinding tns:version="2.0">
				<tns:ReliableMessaging>
					<tns:Retries>5</tns:Retries>
					<tns:RetryInterval>PT5M</tns:RetryInterval>
					<tns:MessageOrderSemantics>NotGuaranteed</tns:MessageOrderSemantics>
				</tns:ReliableMessaging>
				<tns:PersistDuration>PT30M</tns:PersistDuration>
			</tns:ebXMLSenderBinding>
			<tns:ebXMLReceiverBinding tns:version="2.0">
				<tns:ReliableMessaging>
					<tns:Retries>5</tns:Retries>
					<tns:RetryInterval>PT5M</tns:RetryInterval>
					<tns:MessageOrderSemantics>NotGuaranteed</tns:MessageOrderSemantics>
				</tns:ReliableMessaging>
				<tns:PersistDuration>PT30M</tns:PersistDuration>
			</tns:ebXMLReceiverBinding>
		</tns:DocExchange>
	</tns:PartyInfo>
	<tns:PartyInfo tns:partyName="Overheid" tns:defaultMshChannelId="OVERHEID_defaultDeliveryChannel_ProfileBestEffortSigned" tns:defaultMshPackageId="MshSignalPackage">
		<tns:PartyId tns:type="urn:osb:oin">00000000000000000001</tns:PartyId>
		<tns:PartyRef xlink:href="" />
		<tns:CollaborationRole>
			<tns:ProcessSpecification tns:name="afleveren" tns:version="1.0" xlink:href="http://www.overheidsservicebus.nl/osr/Afleveren" tns:uuid="urn:overheidsservicebus.nl:osr:Afleveren:OsbAfleveren11$10" />
			<tns:Role tns:name="OVERHEID" xlink:href="http://www.overheidsservicebus.nl/osr/" />
			<tns:ServiceBinding>
				<tns:Service tns:type="urn:osb:services">osb:afleveren:1.1$1.0</tns:Service>
				<tns:CanSend>
					<tns:ThisPartyActionBinding tns:id="OVERHEID_S_BevestigAfleveren" tns:action="bevestigAfleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>DIGIPOORT_R_BevestigAfleveren</tns:OtherPartyActionBinding>
				</tns:CanSend>
				<tns:CanReceive>
					<tns:ThisPartyActionBinding tns:id="OVERHEID_R_Afleveren" tns:action="afleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>DIGIPOORT_S_Afleveren</tns:OtherPartyActionBinding>
				</tns:CanReceive>
			</tns:ServiceBinding>
		</tns:CollaborationRole>
		<tns:CollaborationRole>
			<tns:ProcessSpecification tns:name="aanleveren" tns:version="1.0" xlink:href="http://www.overheidsservicebus.nl/osr/Aanleveren" tns:uuid="urn:overheidsservicebus.nl:osr:Aanleveren:OsbAanleveren10$10" />
			<tns:Role tns:name="OVERHEID" xlink:href="http://www.overheidsservicebus.nl/osr/" />
			<tns:ServiceBinding>
				<tns:Service tns:type="urn:osb:services">osb:aanleveren:1.1$1.0</tns:Service>
				<tns:CanSend>
					<tns:ThisPartyActionBinding tns:id="OVERHEID_S_Aanleveren" tns:action="aanleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>DIGIPOORT_R_Aanleveren</tns:OtherPartyActionBinding>
				</tns:CanSend>
				<tns:CanReceive>
					<tns:ThisPartyActionBinding tns:id="OVERHEID_R_BevestigAanleveren" tns:action="bevestigAanleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>DIGIPOORT_S_BevestigAanleveren</tns:OtherPartyActionBinding>
				</tns:CanReceive>
			</tns:ServiceBinding>
		</tns:CollaborationRole>
		<tns:DeliveryChannel tns:channelId="OVERHEID_defaultDeliveryChannel_ProfileBestEffortSigned" tns:docExchangeId="OVERHEID_BestEffort" tns:transportId="OVERHEID_transport_HTTP">
			<tns:MessagingCharacteristics tns:syncReplyMode="signalsAndResponse" tns:ackRequested="never" tns:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" tns:ackSignatureRequested="never" tns:duplicateElimination="never" />
		</tns:DeliveryChannel>
		<tns:DeliveryChannel tns:channelId="OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging" tns:docExchangeId="OVERHEID_ReliableMessaging" tns:transportId="OVERHEID_transport_HTTP">
			<tns:MessagingCharacteristics tns:syncReplyMode="signalsAndResponse" tns:ackRequested="always" tns:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" tns:ackSignatureRequested="never" tns:duplicateElimination="always" />
		</tns:DeliveryChannel>
		<tns:Transport tns:transportId="OVERHEID_transport_HTTP">
			<tns:TransportSender>
				<tns:TransportProtocol tns:version="1.1">HTTP</tns:TransportProtocol>
			</tns:TransportSender>
			<tns:TransportReceiver>
				<tns:TransportProtocol tns:version="1.1">HTTP</tns:TransportProtocol>
				<tns:Endpoint tns:uri="http://localhost:8088/ebms" tns:type="allPurpose" />
			</tns:TransportReceiver>
		</tns:Transport>
		<tns:DocExchange tns:docExchangeId="OVERHEID_BestEffort">
			<tns:ebXMLSenderBinding tns:version="2.0" />
			<tns:ebXMLReceiverBinding tns:version="2.0" />
		</tns:DocExchange>
		<tns:DocExchange tns:docExchangeId="OVERHEID_ReliableMessaging">
			<tns:ebXMLSenderBinding tns:version="2.0">
				<tns:ReliableMessaging>
					<tns:Retries>5</tns:Retries>
					<tns:RetryInterval>PT5M</tns:RetryInterval>
					<tns:MessageOrderSemantics>NotGuaranteed</tns:MessageOrderSemantics>
				</tns:ReliableMessaging>
				<tns:PersistDuration>PT30M</tns:PersistDuration>
			</tns:ebXMLSenderBinding>
			<tns:ebXMLReceiverBinding tns:version="2.0">
				<tns:ReliableMessaging>
					<tns:Retries>5</tns:Retries>
					<tns:RetryInterval>PT5M</tns:RetryInterval>
					<tns:MessageOrderSemantics>NotGuaranteed</tns:MessageOrderSemantics>
				</tns:ReliableMessaging>
				<tns:PersistDuration>PT30M</tns:PersistDuration>
			</tns:ebXMLReceiverBinding>
		</tns:DocExchange>
	</tns:PartyInfo>
	<tns:SimplePart tns:id="MsgHdr" tns:mimetype="text/xml">
		<tns:NamespaceSupported tns:location="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" tns:version="2.0">http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd</tns:NamespaceSupported>
	</tns:SimplePart>
	<tns:SimplePart tns:id="XMLMsg" tns:mimetype="application/xml" />
	<tns:Packaging tns:id="MshSignalPackage">
		<tns:ProcessingCapabilities tns:parse="true" tns:generate="true" />
		<tns:CompositeList>
			<tns:Composite tns:id="MshSignal" tns:mimetype="multipart/related" tns:mimeparameters="type=text/xml">
				<tns:Constituent tns:idref="MsgHdr" />
			</tns:Composite>
		</tns:CompositeList>
	</tns:Packaging>
	<tns:Packaging tns:id="XMLMessagePackage">
		<tns:ProcessingCapabilities tns:parse="true" tns:generate="true" />
		<tns:CompositeList>
			<tns:Composite tns:id="Message" tns:mimetype="multipart/related" tns:mimeparameters="type=text/xml">
				<tns:Constituent tns:idref="MsgHdr" />
				<tns:Constituent tns:idref="XMLMsg" />
			</tns:Composite>
		</tns:CompositeList>
	</tns:Packaging>
</tns:CollaborationProtocolAgreement>]]]]>><![CDATA[</cpa>
         <overwrite>true</overwrite>
      </ns:insertCPA>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/cpa/2.10/CPAService/InsertCPA"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b998c40a-6988-4f4c-a259-372e6731dd50" name="Request 2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/cpa</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:insertCPA>
         <cpa><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns1:CollaborationProtocolAgreement ns1:cpaid="CPA_EBFStub" ns1:version="1.0" xmlns:ns2="http://www.w3.org/1999/xlink" xmlns:ns1="http://www.oasis-open.org/committees/ebxml-cppa/schema/cpp-cpa-2_0.xsd" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#">
    <ns1:Status ns1:value="agreed"/>
    <ns1:Start>2011-01-01T01:00:00+01:00</ns1:Start>
    <ns1:End>2021-01-01T01:00:00+01:00</ns1:End>
    <ns1:PartyInfo ns1:partyName="Logius" ns1:defaultMshChannelId="DIGIPOORT_defaultDeliveryChannel_ProfileBestEffortSigned" ns1:defaultMshPackageId="MshSignalPackage">
        <ns1:PartyId ns1:type="urn:osb:oin">00000000000000000000</ns1:PartyId>
        <ns1:PartyRef ns2:href=""/>
        <ns1:CollaborationRole>
            <ns1:ProcessSpecification ns1:name="afleveren" ns1:version="1.0" ns1:uuid="urn:overheidsservicebus.nl:osr:Afleveren:OsbAfleveren11$10" ns2:href="http://www.overheidsservicebus.nl/osr/Afleveren"/>
            <ns1:Role ns1:name="DIGIPOORT" ns2:href="http://www.overheidsservicebus.nl/osr/"/>
            <ns1:ServiceBinding>
                <ns1:Service ns1:type="urn:osb:services">osb:afleveren:1.1$1.0</ns1:Service>
                <ns1:CanSend>
                    <ns1:ThisPartyActionBinding ns1:id="DIGIPOORT_S_Afleveren" ns1:action="afleveren" ns1:packageId="XMLMessagePackage">
                        <ns1:BusinessTransactionCharacteristics ns1:isNonRepudiationRequired="true" ns1:isNonRepudiationReceiptRequired="true" ns1:isConfidential="transient" ns1:isAuthenticated="transient-and-persistent" ns1:isTamperProof="transient-and-persistent" ns1:isAuthorizationRequired="true" ns1:isIntelligibleCheckRequired="false" ns1:timeToPerform="P2D"/>
                        <ns1:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessagingSigned</ns1:ChannelId>
                    </ns1:ThisPartyActionBinding>
                    <ns1:OtherPartyActionBinding>OVERHEID_R_Afleveren</ns1:OtherPartyActionBinding>
                </ns1:CanSend>
                <ns1:CanReceive>
                    <ns1:ThisPartyActionBinding ns1:id="DIGIPOORT_R_BevestigAfleveren" ns1:action="bevestigAfleveren" ns1:packageId="XMLMessagePackage">
                        <ns1:BusinessTransactionCharacteristics ns1:isNonRepudiationRequired="true" ns1:isNonRepudiationReceiptRequired="true" ns1:isConfidential="transient" ns1:isAuthenticated="transient-and-persistent" ns1:isTamperProof="transient-and-persistent" ns1:isAuthorizationRequired="true" ns1:isIntelligibleCheckRequired="false" ns1:timeToPerform="P2D"/>
                        <ns1:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessagingSigned</ns1:ChannelId>
                    </ns1:ThisPartyActionBinding>
                    <ns1:OtherPartyActionBinding>OVERHEID_S_BevestigAfleveren</ns1:OtherPartyActionBinding>
                </ns1:CanReceive>
            </ns1:ServiceBinding>
        </ns1:CollaborationRole>
        <ns1:CollaborationRole>
            <ns1:ProcessSpecification ns1:name="aanleveren" ns1:version="1.0" ns1:uuid="urn:overheidsservicebus.nl:osr:Aanleveren:OsbAanleveren10$10" ns2:href="http://www.overheidsservicebus.nl/osr/Aanleveren"/>
            <ns1:Role ns1:name="DIGIPOORT" ns2:href="http://www.overheidsservicebus.nl/osr/"/>
            <ns1:ServiceBinding>
                <ns1:Service ns1:type="urn:osb:services">osb:aanleveren:1.1$1.0</ns1:Service>
                <ns1:CanSend>
                    <ns1:ThisPartyActionBinding ns1:id="DIGIPOORT_S_BevestigAanleveren" ns1:action="bevestigAanleveren" ns1:packageId="XMLMessagePackage">
                        <ns1:BusinessTransactionCharacteristics ns1:isNonRepudiationRequired="true" ns1:isNonRepudiationReceiptRequired="true" ns1:isConfidential="transient" ns1:isAuthenticated="transient-and-persistent" ns1:isTamperProof="transient-and-persistent" ns1:isAuthorizationRequired="true" ns1:isIntelligibleCheckRequired="false" ns1:timeToPerform="P2D"/>
                        <ns1:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessagingSigned</ns1:ChannelId>
                    </ns1:ThisPartyActionBinding>
                    <ns1:OtherPartyActionBinding>OVERHEID_R_BevestigAanleveren</ns1:OtherPartyActionBinding>
                </ns1:CanSend>
                <ns1:CanReceive>
                    <ns1:ThisPartyActionBinding ns1:id="DIGIPOORT_R_Aanleveren" ns1:action="aanleveren" ns1:packageId="XMLMessagePackage">
                        <ns1:BusinessTransactionCharacteristics ns1:isNonRepudiationRequired="true" ns1:isNonRepudiationReceiptRequired="true" ns1:isConfidential="transient" ns1:isAuthenticated="transient-and-persistent" ns1:isTamperProof="transient-and-persistent" ns1:isAuthorizationRequired="true" ns1:isIntelligibleCheckRequired="false" ns1:timeToPerform="P2D"/>
                        <ns1:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessagingSigned</ns1:ChannelId>
                    </ns1:ThisPartyActionBinding>
                    <ns1:OtherPartyActionBinding>OVERHEID_S_Aanleveren</ns1:OtherPartyActionBinding>
                </ns1:CanReceive>
            </ns1:ServiceBinding>
        </ns1:CollaborationRole>
        <ns1:Certificate ns1:certId="DIGIPOORT_SigningCert">
            <ns3:KeyInfo>
				
                
                <ns3:KeyValue>
					
                    
                    <ns3:RSAKeyValue>
                        <ns3:Modulus>1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnU=</ns3:Modulus>
                        <ns3:Exponent>AQAB</ns3:Exponent>
                    </ns3:RSAKeyValue>
				</ns3:KeyValue>
				
                
                <ns3:X509Data>
                    <ns3:X509IssuerSerial>
                        <ns3:X509IssuerName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509IssuerName>
                        <ns3:X509SerialNumber>1321267627</ns3:X509SerialNumber>
                    </ns3:X509IssuerSerial>
                    <ns3:X509SubjectName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509SubjectName>
                    <ns3:X509Certificate>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJOTDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNVBAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xvY2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkGA1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2VuMQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQd3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5qwJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpKX2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</ns3:X509Certificate>
                </ns3:X509Data>
			</ns3:KeyInfo>
        </ns1:Certificate>
        <ns1:Certificate ns1:certId="DIGIPOORT_EncryptionCert">
            <ns3:KeyInfo>
				
                
                <ns3:KeyValue>
					
                    
                    <ns3:RSAKeyValue>
                        <ns3:Modulus>1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnU=</ns3:Modulus>
                        <ns3:Exponent>AQAB</ns3:Exponent>
                    </ns3:RSAKeyValue>
				</ns3:KeyValue>
				
                
                <ns3:X509Data>
                    <ns3:X509IssuerSerial>
                        <ns3:X509IssuerName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509IssuerName>
                        <ns3:X509SerialNumber>1321267627</ns3:X509SerialNumber>
                    </ns3:X509IssuerSerial>
                    <ns3:X509SubjectName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509SubjectName>
                    <ns3:X509Certificate>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJOTDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNVBAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xvY2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkGA1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2VuMQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQd3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5qwJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpKX2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</ns3:X509Certificate>
                </ns3:X509Data>
			</ns3:KeyInfo>
        </ns1:Certificate>
        <ns1:Certificate ns1:certId="DIGIPOORT_ServerCert">
            <ns3:KeyInfo>
				
                
                <ns3:KeyValue>
					
                    
                    <ns3:RSAKeyValue>
                        <ns3:Modulus>1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnU=</ns3:Modulus>
                        <ns3:Exponent>AQAB</ns3:Exponent>
                    </ns3:RSAKeyValue>
				</ns3:KeyValue>
				
                
                <ns3:X509Data>
                    <ns3:X509IssuerSerial>
                        <ns3:X509IssuerName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509IssuerName>
                        <ns3:X509SerialNumber>1321267627</ns3:X509SerialNumber>
                    </ns3:X509IssuerSerial>
                    <ns3:X509SubjectName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509SubjectName>
                    <ns3:X509Certificate>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJOTDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNVBAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xvY2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkGA1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2VuMQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQd3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5qwJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpKX2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</ns3:X509Certificate>
                </ns3:X509Data>
			</ns3:KeyInfo>
        </ns1:Certificate>
        <ns1:Certificate ns1:certId="DIGIPOORT_ClientCert">
            <ns3:KeyInfo>
				
                
                <ns3:KeyValue>
					
                    
                    <ns3:RSAKeyValue>
                        <ns3:Modulus>1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnU=</ns3:Modulus>
                        <ns3:Exponent>AQAB</ns3:Exponent>
                    </ns3:RSAKeyValue>
				</ns3:KeyValue>
				
                
                <ns3:X509Data>
                    <ns3:X509IssuerSerial>
                        <ns3:X509IssuerName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509IssuerName>
                        <ns3:X509SerialNumber>1321267627</ns3:X509SerialNumber>
                    </ns3:X509IssuerSerial>
                    <ns3:X509SubjectName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509SubjectName>
                    <ns3:X509Certificate>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJOTDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNVBAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xvY2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkGA1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2VuMQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQd3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5qwJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpKX2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</ns3:X509Certificate>
                </ns3:X509Data>
			</ns3:KeyInfo>
        </ns1:Certificate>
        <ns1:SecurityDetails ns1:securityId="DIGIPOORT_Security">
            <ns1:TrustAnchors>
                <ns1:AnchorCertificateRef ns1:certId="DIGIPOORT_SigningCert"/>
                <ns1:AnchorCertificateRef ns1:certId="DIGIPOORT_EncryptionCert"/>
            </ns1:TrustAnchors>
        </ns1:SecurityDetails>
        <ns1:SecurityDetails ns1:securityId="DIGIPOORT_TransportSecurity">
            <ns1:TrustAnchors>
                <ns1:AnchorCertificateRef ns1:certId="DIGIPOORT_ServerCert"/>
                <ns1:AnchorCertificateRef ns1:certId="DIGIPOORT_ClientCert"/>
            </ns1:TrustAnchors>
        </ns1:SecurityDetails>
        <ns1:DeliveryChannel ns1:channelId="DIGIPOORT_defaultDeliveryChannel_ProfileBestEffortSigned" ns1:transportId="DIGIPOORT_transport_HTTPS" ns1:docExchangeId="DIGIPOORT_SIGNED_BestEffort">
            <ns1:MessagingCharacteristics ns1:syncReplyMode="none" ns1:ackRequested="never" ns1:ackSignatureRequested="never" ns1:duplicateElimination="never" ns1:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH"/>
        </ns1:DeliveryChannel>
        <ns1:DeliveryChannel ns1:channelId="DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessagingSigned" ns1:transportId="DIGIPOORT_transport_HTTPS" ns1:docExchangeId="DIGIPOORT_SIGNED_ReliableMessaging">
            <ns1:MessagingCharacteristics ns1:syncReplyMode="none" ns1:ackRequested="always" ns1:ackSignatureRequested="never" ns1:duplicateElimination="always" ns1:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH"/>
        </ns1:DeliveryChannel>
        <ns1:Transport ns1:transportId="DIGIPOORT_transport_HTTPS">
            <ns1:TransportSender>
                <ns1:TransportProtocol ns1:version="1.1">HTTP</ns1:TransportProtocol>
                <ns1:TransportClientSecurity>
                    <ns1:TransportSecurityProtocol ns1:version="3.0">SSL</ns1:TransportSecurityProtocol>
                    <ns1:ClientCertificateRef ns1:certId="DIGIPOORT_ClientCert"/>
                    <ns1:ServerSecurityDetailsRef ns1:securityId="DIGIPOORT_TransportSecurity"/>
                </ns1:TransportClientSecurity>
            </ns1:TransportSender>
            <ns1:TransportReceiver>
                <ns1:TransportProtocol ns1:version="1.1">HTTP</ns1:TransportProtocol>
                <ns1:Endpoint ns1:uri="https://localhost:8888/ebms" ns1:type="allPurpose"/>
                <ns1:TransportServerSecurity>
                    <ns1:TransportSecurityProtocol ns1:version="3.0">SSL</ns1:TransportSecurityProtocol>
                    <ns1:ServerCertificateRef ns1:certId="DIGIPOORT_ServerCert"/>
                    <ns1:ClientSecurityDetailsRef ns1:securityId="DIGIPOORT_TransportSecurity"/>
                </ns1:TransportServerSecurity>
            </ns1:TransportReceiver>
        </ns1:Transport>
        <ns1:DocExchange ns1:docExchangeId="DIGIPOORT_SIGNED_BestEffort">
            <ns1:ebXMLSenderBinding ns1:version="2.0">
                <ns1:SenderNonRepudiation>
                    <ns1:NonRepudiationProtocol>http://www.w3.org/2000/09/xmldsig#</ns1:NonRepudiationProtocol>
                    <ns1:HashFunction>http://www.w3.org/2000/09/xmldsig#sha1</ns1:HashFunction>
                    <ns1:SignatureAlgorithm>http://www.w3.org/2000/09/xmldsig#rsa-sha1</ns1:SignatureAlgorithm>
                    <ns1:SigningCertificateRef ns1:certId="DIGIPOORT_SigningCert"/>
                </ns1:SenderNonRepudiation>
            </ns1:ebXMLSenderBinding>
            <ns1:ebXMLReceiverBinding ns1:version="2.0">
                <ns1:ReceiverNonRepudiation>
                    <ns1:NonRepudiationProtocol>http://www.w3.org/2000/09/xmldsig#</ns1:NonRepudiationProtocol>
                    <ns1:HashFunction>http://www.w3.org/2000/09/xmldsig#sha1</ns1:HashFunction>
                    <ns1:SignatureAlgorithm>http://www.w3.org/2000/09/xmldsig#rsa-sha1</ns1:SignatureAlgorithm>
                    <ns1:SigningSecurityDetailsRef ns1:securityId="DIGIPOORT_Security"/>
                </ns1:ReceiverNonRepudiation>
            </ns1:ebXMLReceiverBinding>
        </ns1:DocExchange>
        <ns1:DocExchange ns1:docExchangeId="DIGIPOORT_SIGNED_ReliableMessaging">
            <ns1:ebXMLSenderBinding ns1:version="2.0">
                <ns1:ReliableMessaging>
                    <ns1:Retries>5</ns1:Retries>
                    <ns1:RetryInterval>PT5M</ns1:RetryInterval>
                    <ns1:MessageOrderSemantics>NotGuaranteed</ns1:MessageOrderSemantics>
                </ns1:ReliableMessaging>
                <ns1:PersistDuration>PT30M</ns1:PersistDuration>
                <ns1:SenderNonRepudiation>
                    <ns1:NonRepudiationProtocol>http://www.w3.org/2000/09/xmldsig#</ns1:NonRepudiationProtocol>
                    <ns1:HashFunction>http://www.w3.org/2000/09/xmldsig#sha1</ns1:HashFunction>
                    <ns1:SignatureAlgorithm>http://www.w3.org/2000/09/xmldsig#rsa-sha1</ns1:SignatureAlgorithm>
                    <ns1:SigningCertificateRef ns1:certId="DIGIPOORT_SigningCert"/>
                </ns1:SenderNonRepudiation>
            </ns1:ebXMLSenderBinding>
            <ns1:ebXMLReceiverBinding ns1:version="2.0">
                <ns1:ReliableMessaging>
                    <ns1:Retries>5</ns1:Retries>
                    <ns1:RetryInterval>PT5M</ns1:RetryInterval>
                    <ns1:MessageOrderSemantics>NotGuaranteed</ns1:MessageOrderSemantics>
                </ns1:ReliableMessaging>
                <ns1:PersistDuration>PT30M</ns1:PersistDuration>
                <ns1:ReceiverNonRepudiation>
                    <ns1:NonRepudiationProtocol>http://www.w3.org/2000/09/xmldsig#</ns1:NonRepudiationProtocol>
                    <ns1:HashFunction>http://www.w3.org/2000/09/xmldsig#sha1</ns1:HashFunction>
                    <ns1:SignatureAlgorithm>http://www.w3.org/2000/09/xmldsig#rsa-sha1</ns1:SignatureAlgorithm>
                    <ns1:SigningSecurityDetailsRef ns1:securityId="DIGIPOORT_Security"/>
                </ns1:ReceiverNonRepudiation>
            </ns1:ebXMLReceiverBinding>
        </ns1:DocExchange>
    </ns1:PartyInfo>
    <ns1:PartyInfo ns1:partyName="Overheid" ns1:defaultMshChannelId="OVERHEID_defaultDeliveryChannel_ProfileBestEffortSigned" ns1:defaultMshPackageId="MshSignalPackage">
        <ns1:PartyId ns1:type="urn:osb:oin">00000000000000000001</ns1:PartyId>
        <ns1:PartyRef ns2:href=""/>
        <ns1:CollaborationRole>
            <ns1:ProcessSpecification ns1:name="afleveren" ns1:version="1.0" ns1:uuid="urn:overheidsservicebus.nl:osr:Afleveren:OsbAfleveren11$10" ns2:href="http://www.overheidsservicebus.nl/osr/Afleveren"/>
            <ns1:Role ns1:name="OVERHEID" ns2:href="http://www.overheidsservicebus.nl/osr/"/>
            <ns1:ServiceBinding>
                <ns1:Service ns1:type="urn:osb:services">osb:afleveren:1.1$1.0</ns1:Service>
                <ns1:CanSend>
                    <ns1:ThisPartyActionBinding ns1:id="OVERHEID_S_BevestigAfleveren" ns1:action="bevestigAfleveren" ns1:packageId="XMLMessagePackage">
                        <ns1:BusinessTransactionCharacteristics ns1:isNonRepudiationRequired="true" ns1:isNonRepudiationReceiptRequired="true" ns1:isConfidential="transient" ns1:isAuthenticated="transient-and-persistent" ns1:isTamperProof="transient-and-persistent" ns1:isAuthorizationRequired="true" ns1:isIntelligibleCheckRequired="false" ns1:timeToPerform="P2D"/>
                        <ns1:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessagingSigned</ns1:ChannelId>
                    </ns1:ThisPartyActionBinding>
                    <ns1:OtherPartyActionBinding>DIGIPOORT_R_BevestigAfleveren</ns1:OtherPartyActionBinding>
                </ns1:CanSend>
                <ns1:CanReceive>
                    <ns1:ThisPartyActionBinding ns1:id="OVERHEID_R_Afleveren" ns1:action="afleveren" ns1:packageId="XMLMessagePackage">
                        <ns1:BusinessTransactionCharacteristics ns1:isNonRepudiationRequired="true" ns1:isNonRepudiationReceiptRequired="true" ns1:isConfidential="transient" ns1:isAuthenticated="transient-and-persistent" ns1:isTamperProof="transient-and-persistent" ns1:isAuthorizationRequired="true" ns1:isIntelligibleCheckRequired="false" ns1:timeToPerform="P2D"/>
                        <ns1:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessagingSigned</ns1:ChannelId>
                    </ns1:ThisPartyActionBinding>
                    <ns1:OtherPartyActionBinding>DIGIPOORT_S_Afleveren</ns1:OtherPartyActionBinding>
                </ns1:CanReceive>
            </ns1:ServiceBinding>
        </ns1:CollaborationRole>
        <ns1:CollaborationRole>
            <ns1:ProcessSpecification ns1:name="aanleveren" ns1:version="1.0" ns1:uuid="urn:overheidsservicebus.nl:osr:Aanleveren:OsbAanleveren10$10" ns2:href="http://www.overheidsservicebus.nl/osr/Aanleveren"/>
            <ns1:Role ns1:name="OVERHEID" ns2:href="http://www.overheidsservicebus.nl/osr/"/>
            <ns1:ServiceBinding>
                <ns1:Service ns1:type="urn:osb:services">osb:aanleveren:1.1$1.0</ns1:Service>
                <ns1:CanSend>
                    <ns1:ThisPartyActionBinding ns1:id="OVERHEID_S_Aanleveren" ns1:action="aanleveren" ns1:packageId="XMLMessagePackage">
                        <ns1:BusinessTransactionCharacteristics ns1:isNonRepudiationRequired="true" ns1:isNonRepudiationReceiptRequired="true" ns1:isConfidential="transient" ns1:isAuthenticated="transient-and-persistent" ns1:isTamperProof="transient-and-persistent" ns1:isAuthorizationRequired="true" ns1:isIntelligibleCheckRequired="false" ns1:timeToPerform="P2D"/>
                        <ns1:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessagingSigned</ns1:ChannelId>
                    </ns1:ThisPartyActionBinding>
                    <ns1:OtherPartyActionBinding>DIGIPOORT_R_Aanleveren</ns1:OtherPartyActionBinding>
                </ns1:CanSend>
                <ns1:CanReceive>
                    <ns1:ThisPartyActionBinding ns1:id="OVERHEID_R_BevestigAanleveren" ns1:action="bevestigAanleveren" ns1:packageId="XMLMessagePackage">
                        <ns1:BusinessTransactionCharacteristics ns1:isNonRepudiationRequired="true" ns1:isNonRepudiationReceiptRequired="true" ns1:isConfidential="transient" ns1:isAuthenticated="transient-and-persistent" ns1:isTamperProof="transient-and-persistent" ns1:isAuthorizationRequired="true" ns1:isIntelligibleCheckRequired="false" ns1:timeToPerform="P2D"/>
                        <ns1:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessagingSigned</ns1:ChannelId>
                    </ns1:ThisPartyActionBinding>
                    <ns1:OtherPartyActionBinding>DIGIPOORT_S_BevestigAanleveren</ns1:OtherPartyActionBinding>
                </ns1:CanReceive>
            </ns1:ServiceBinding>
        </ns1:CollaborationRole>
        <ns1:Certificate ns1:certId="OVERHEID_SigningCert">
            <ns3:KeyInfo>
				
                
                <ns3:KeyValue>
					
                    
                    <ns3:RSAKeyValue>
                        <ns3:Modulus>1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnU=</ns3:Modulus>
                        <ns3:Exponent>AQAB</ns3:Exponent>
                    </ns3:RSAKeyValue>
				</ns3:KeyValue>
				
                
                <ns3:X509Data>
                    <ns3:X509IssuerSerial>
                        <ns3:X509IssuerName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509IssuerName>
                        <ns3:X509SerialNumber>1321267627</ns3:X509SerialNumber>
                    </ns3:X509IssuerSerial>
                    <ns3:X509SubjectName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509SubjectName>
                    <ns3:X509Certificate>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJOTDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNVBAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xvY2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkGA1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2VuMQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQd3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5qwJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpKX2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</ns3:X509Certificate>
                </ns3:X509Data>
			</ns3:KeyInfo>
        </ns1:Certificate>
        <ns1:Certificate ns1:certId="OVERHEID_EncryptionCert">
            <ns3:KeyInfo>
				
                
                <ns3:KeyValue>
					
                    
                    <ns3:RSAKeyValue>
                        <ns3:Modulus>1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnU=</ns3:Modulus>
                        <ns3:Exponent>AQAB</ns3:Exponent>
                    </ns3:RSAKeyValue>
				</ns3:KeyValue>
				
                
                <ns3:X509Data>
                    <ns3:X509IssuerSerial>
                        <ns3:X509IssuerName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509IssuerName>
                        <ns3:X509SerialNumber>1321267627</ns3:X509SerialNumber>
                    </ns3:X509IssuerSerial>
                    <ns3:X509SubjectName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509SubjectName>
                    <ns3:X509Certificate>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJOTDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNVBAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xvY2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkGA1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2VuMQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQd3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5qwJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpKX2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</ns3:X509Certificate>
                </ns3:X509Data>
			</ns3:KeyInfo>
        </ns1:Certificate>
        <ns1:Certificate ns1:certId="OVERHEID_ServerCert">
            <ns3:KeyInfo>
				
                
                <ns3:KeyValue>
					
                    
                    <ns3:RSAKeyValue>
                        <ns3:Modulus>1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnU=</ns3:Modulus>
                        <ns3:Exponent>AQAB</ns3:Exponent>
                    </ns3:RSAKeyValue>
				</ns3:KeyValue>
				
                
                <ns3:X509Data>
                    <ns3:X509IssuerSerial>
                        <ns3:X509IssuerName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509IssuerName>
                        <ns3:X509SerialNumber>1321267627</ns3:X509SerialNumber>
                    </ns3:X509IssuerSerial>
                    <ns3:X509SubjectName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509SubjectName>
                    <ns3:X509Certificate>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJOTDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNVBAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xvY2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkGA1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2VuMQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQd3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5qwJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpKX2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</ns3:X509Certificate>
                </ns3:X509Data>
			</ns3:KeyInfo>
        </ns1:Certificate>
        <ns1:Certificate ns1:certId="OVERHEID_ClientCert">
            <ns3:KeyInfo>
				
                
                <ns3:KeyValue>
					
                    
                    <ns3:RSAKeyValue>
                        <ns3:Modulus>1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnU=</ns3:Modulus>
                        <ns3:Exponent>AQAB</ns3:Exponent>
                    </ns3:RSAKeyValue>
				</ns3:KeyValue>
				
                
                <ns3:X509Data>
                    <ns3:X509IssuerSerial>
                        <ns3:X509IssuerName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509IssuerName>
                        <ns3:X509SerialNumber>1321267627</ns3:X509SerialNumber>
                    </ns3:X509IssuerSerial>
                    <ns3:X509SubjectName>CN=www.clockwork.nl,OU=Clockwork,O=Ordina,L=Groningen,ST=Groningen,C=NL</ns3:X509SubjectName>
                    <ns3:X509Certificate>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJOTDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNVBAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xvY2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkGA1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2VuMQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQd3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1KkdUYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnSBsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5qwJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpKX2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</ns3:X509Certificate>
                </ns3:X509Data>
			</ns3:KeyInfo>
        </ns1:Certificate>
        <ns1:SecurityDetails ns1:securityId="OVERHEID_Security">
            <ns1:TrustAnchors>
                <ns1:AnchorCertificateRef ns1:certId="OVERHEID_SigningCert"/>
                <ns1:AnchorCertificateRef ns1:certId="OVERHEID_EncryptionCert"/>
            </ns1:TrustAnchors>
        </ns1:SecurityDetails>
        <ns1:SecurityDetails ns1:securityId="OVERHEID_TransportSecurity">
            <ns1:TrustAnchors>
                <ns1:AnchorCertificateRef ns1:certId="OVERHEID_ServerCert"/>
                <ns1:AnchorCertificateRef ns1:certId="OVERHEID_ClientCert"/>
            </ns1:TrustAnchors>
        </ns1:SecurityDetails>
        <ns1:DeliveryChannel ns1:channelId="OVERHEID_defaultDeliveryChannel_ProfileBestEffortSigned" ns1:transportId="OVERHEID_transport_HTTPS" ns1:docExchangeId="OVERHEID_SIGNED_BestEffort">
            <ns1:MessagingCharacteristics ns1:syncReplyMode="none" ns1:ackRequested="never" ns1:ackSignatureRequested="never" ns1:duplicateElimination="never" ns1:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH"/>
        </ns1:DeliveryChannel>
        <ns1:DeliveryChannel ns1:channelId="OVERHEID_defaultDeliveryChannel_ProfileReliableMessagingSigned" ns1:transportId="OVERHEID_transport_HTTPS" ns1:docExchangeId="OVERHEID_SIGNED_ReliableMessaging">
            <ns1:MessagingCharacteristics ns1:syncReplyMode="none" ns1:ackRequested="always" ns1:ackSignatureRequested="never" ns1:duplicateElimination="always" ns1:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH"/>
        </ns1:DeliveryChannel>
        <ns1:Transport ns1:transportId="OVERHEID_transport_HTTPS">
            <ns1:TransportSender>
                <ns1:TransportProtocol ns1:version="1.1">HTTP</ns1:TransportProtocol>
                <ns1:TransportClientSecurity>
                    <ns1:TransportSecurityProtocol ns1:version="3.0">SSL</ns1:TransportSecurityProtocol>
                    <ns1:ClientCertificateRef ns1:certId="OVERHEID_ClientCert"/>
                    <ns1:ServerSecurityDetailsRef ns1:securityId="OVERHEID_TransportSecurity"/>
                </ns1:TransportClientSecurity>
            </ns1:TransportSender>
            <ns1:TransportReceiver>
                <ns1:TransportProtocol ns1:version="1.1">HTTP</ns1:TransportProtocol>
                <ns1:Endpoint ns1:uri="https://localhost:8088/ebms" ns1:type="allPurpose"/>
                <ns1:TransportServerSecurity>
                    <ns1:TransportSecurityProtocol ns1:version="3.0">SSL</ns1:TransportSecurityProtocol>
                    <ns1:ServerCertificateRef ns1:certId="OVERHEID_ServerCert"/>
                    <ns1:ClientSecurityDetailsRef ns1:securityId="OVERHEID_TransportSecurity"/>
                </ns1:TransportServerSecurity>
            </ns1:TransportReceiver>
        </ns1:Transport>
        <ns1:DocExchange ns1:docExchangeId="OVERHEID_SIGNED_BestEffort">
            <ns1:ebXMLSenderBinding ns1:version="2.0">
                <ns1:SenderNonRepudiation>
                    <ns1:NonRepudiationProtocol>http://www.w3.org/2000/09/xmldsig#</ns1:NonRepudiationProtocol>
                    <ns1:HashFunction>http://www.w3.org/2000/09/xmldsig#sha1</ns1:HashFunction>
                    <ns1:SignatureAlgorithm>http://www.w3.org/2000/09/xmldsig#rsa-sha1</ns1:SignatureAlgorithm>
                    <ns1:SigningCertificateRef ns1:certId="OVERHEID_SigningCert"/>
                </ns1:SenderNonRepudiation>
            </ns1:ebXMLSenderBinding>
            <ns1:ebXMLReceiverBinding ns1:version="2.0">
                <ns1:ReceiverNonRepudiation>
                    <ns1:NonRepudiationProtocol>http://www.w3.org/2000/09/xmldsig#</ns1:NonRepudiationProtocol>
                    <ns1:HashFunction>http://www.w3.org/2000/09/xmldsig#sha1</ns1:HashFunction>
                    <ns1:SignatureAlgorithm>http://www.w3.org/2000/09/xmldsig#rsa-sha1</ns1:SignatureAlgorithm>
                    <ns1:SigningSecurityDetailsRef ns1:securityId="OVERHEID_Security"/>
                </ns1:ReceiverNonRepudiation>
            </ns1:ebXMLReceiverBinding>
        </ns1:DocExchange>
        <ns1:DocExchange ns1:docExchangeId="OVERHEID_SIGNED_ReliableMessaging">
            <ns1:ebXMLSenderBinding ns1:version="2.0">
                <ns1:ReliableMessaging>
                    <ns1:Retries>5</ns1:Retries>
                    <ns1:RetryInterval>PT5M</ns1:RetryInterval>
                    <ns1:MessageOrderSemantics>NotGuaranteed</ns1:MessageOrderSemantics>
                </ns1:ReliableMessaging>
                <ns1:PersistDuration>PT30M</ns1:PersistDuration>
                <ns1:SenderNonRepudiation>
                    <ns1:NonRepudiationProtocol>http://www.w3.org/2000/09/xmldsig#</ns1:NonRepudiationProtocol>
                    <ns1:HashFunction>http://www.w3.org/2000/09/xmldsig#sha1</ns1:HashFunction>
                    <ns1:SignatureAlgorithm>http://www.w3.org/2000/09/xmldsig#rsa-sha1</ns1:SignatureAlgorithm>
                    <ns1:SigningCertificateRef ns1:certId="OVERHEID_SigningCert"/>
                </ns1:SenderNonRepudiation>
            </ns1:ebXMLSenderBinding>
            <ns1:ebXMLReceiverBinding ns1:version="2.0">
                <ns1:ReliableMessaging>
                    <ns1:Retries>5</ns1:Retries>
                    <ns1:RetryInterval>PT5M</ns1:RetryInterval>
                    <ns1:MessageOrderSemantics>NotGuaranteed</ns1:MessageOrderSemantics>
                </ns1:ReliableMessaging>
                <ns1:PersistDuration>PT30M</ns1:PersistDuration>
                <ns1:ReceiverNonRepudiation>
                    <ns1:NonRepudiationProtocol>http://www.w3.org/2000/09/xmldsig#</ns1:NonRepudiationProtocol>
                    <ns1:HashFunction>http://www.w3.org/2000/09/xmldsig#sha1</ns1:HashFunction>
                    <ns1:SignatureAlgorithm>http://www.w3.org/2000/09/xmldsig#rsa-sha1</ns1:SignatureAlgorithm>
                    <ns1:SigningSecurityDetailsRef ns1:securityId="OVERHEID_Security"/>
                </ns1:ReceiverNonRepudiation>
            </ns1:ebXMLReceiverBinding>
        </ns1:DocExchange>
    </ns1:PartyInfo>
    <ns1:SimplePart ns1:id="MsgHdr" ns1:mimetype="text/xml">
        <ns1:NamespaceSupported ns1:location="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" ns1:version="2.0">http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd</ns1:NamespaceSupported>
    </ns1:SimplePart>
    <ns1:SimplePart ns1:id="XMLMsg" ns1:mimetype="application/xml"/>
    <ns1:Packaging ns1:id="MshSignalPackage">
        <ns1:ProcessingCapabilities ns1:parse="true" ns1:generate="true"/>
        <ns1:CompositeList>
            <ns1:Composite ns1:id="MshSignal" ns1:mimetype="multipart/related" ns1:mimeparameters="type=text/xml">
                <ns1:Constituent ns1:idref="MsgHdr"/>
            </ns1:Composite>
        </ns1:CompositeList>
    </ns1:Packaging>
    <ns1:Packaging ns1:id="XMLMessagePackage">
        <ns1:ProcessingCapabilities ns1:parse="true" ns1:generate="true"/>
        <ns1:CompositeList>
            <ns1:Composite ns1:id="Message" ns1:mimetype="multipart/related" ns1:mimeparameters="type=text/xml">
                <ns1:Constituent ns1:idref="MsgHdr"/>
                <ns1:Constituent ns1:idref="XMLMsg"/>
            </ns1:Composite>
        </ns1:CompositeList>
    </ns1:Packaging>
</ns1:CollaborationProtocolAgreement>]]]]>><![CDATA[</cpa>
         <overwrite>true</overwrite>
      </ns:insertCPA>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/cpa/2.10/CPAService/InsertCPA"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="354b869d-2430-493b-af66-22532dc9299e" isOneWay="false" action="" name="validateCPA" bindingOperationName="validateCPA" type="Request-Response" outputName="validateCPAResponse" inputName="validateCPA" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="59751ddf-00d5-4cea-9a3e-c623ffb2ddcf" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/cpa</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:validateCPA>
         <cpa>?</cpa>
      </ns:validateCPA>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/cpa/2.10/CPAService/ValidateCPA"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="78916d5a-3f95-4156-8601-7cda69d502d9" wsaVersion="NONE" name="EbMSMessageServiceSoapBinding" type="wsdl" bindingName="{http://www.ordina.nl/ebms/2.18}EbMSMessageServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/service/ebms?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/service/ebms?wsdl"><con:part><con:url>http://localhost:8080/service/ebms?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="EbMSMessageService" targetNamespace="http://www.ordina.nl/ebms/2.18" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.ordina.nl/ebms/2.18" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.ordina.nl/ebms/2.18" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="getMessage" type="tns:getMessage"/>
      <xs:element name="getMessageResponse" type="tns:getMessageResponse"/>
      <xs:element name="getMessageStatus" type="tns:getMessageStatus"/>
      <xs:element name="getMessageStatusResponse" type="tns:getMessageStatusResponse"/>
      <xs:element name="getUnprocessedMessageEvents" type="tns:getUnprocessedMessageEvents"/>
      <xs:element name="getUnprocessedMessageEventsResponse" type="tns:getUnprocessedMessageEventsResponse"/>
      <xs:element name="getUnprocessedMessageIds" type="tns:getUnprocessedMessageIds"/>
      <xs:element name="getUnprocessedMessageIdsResponse" type="tns:getUnprocessedMessageIdsResponse"/>
      <xs:element name="ping" type="tns:ping"/>
      <xs:element name="pingResponse" type="tns:pingResponse"/>
      <xs:element name="processMessage" type="tns:processMessage"/>
      <xs:element name="processMessageEvent" type="tns:processMessageEvent"/>
      <xs:element name="processMessageEventResponse" type="tns:processMessageEventResponse"/>
      <xs:element name="processMessageResponse" type="tns:processMessageResponse"/>
      <xs:element name="resendMessage" type="tns:resendMessage"/>
      <xs:element name="resendMessageResponse" type="tns:resendMessageResponse"/>
      <xs:element name="sendMessage" type="tns:sendMessage"/>
      <xs:element name="sendMessageResponse" type="tns:sendMessageResponse"/>
      <xs:complexType name="getMessageStatus">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getMessageStatusResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageStatus" type="tns:messageStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageStatus">
        <xs:sequence>
          <xs:element name="timestamp" type="tns:instant"/>
          <xs:element name="status" type="tns:ebMSMessageStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="instant">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getUnprocessedMessageEvents">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageFilter" type="tns:messageFilter"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="eventType" type="tns:messageEventType"/>
          <xs:element minOccurs="0" name="maxNr" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="cpaId" type="xs:string"/>
          <xs:element minOccurs="0" name="fromParty" type="tns:party"/>
          <xs:element minOccurs="0" name="toParty" type="tns:party"/>
          <xs:element minOccurs="0" name="service" type="xs:string"/>
          <xs:element minOccurs="0" name="action" type="xs:string"/>
          <xs:element minOccurs="0" name="conversationId" type="xs:string"/>
          <xs:element minOccurs="0" name="messageId" type="xs:string"/>
          <xs:element minOccurs="0" name="refToMessageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="party">
        <xs:sequence>
          <xs:element name="partyId" type="xs:string"/>
          <xs:element minOccurs="0" name="role" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUnprocessedMessageEventsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageEvent" type="tns:messageEvent"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageEvent">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
          <xs:element name="type" type="tns:messageEventType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getMessage">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
          <xs:element minOccurs="0" name="process" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getMessageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="tns:message"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="message">
        <xs:sequence>
          <xs:element name="properties" type="tns:messageProperties"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="dataSource" type="tns:dataSource"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageProperties">
        <xs:sequence>
          <xs:element name="cpaId" type="xs:string"/>
          <xs:element name="fromParty" type="tns:party"/>
          <xs:element name="toParty" type="tns:party"/>
          <xs:element name="service" type="xs:string"/>
          <xs:element name="action" type="xs:string"/>
          <xs:element name="timestamp" type="xs:dateTime"/>
          <xs:element name="conversationId" type="xs:string"/>
          <xs:element name="messageId" type="xs:string"/>
          <xs:element minOccurs="0" name="refToMessageId" type="xs:string"/>
          <xs:element name="messageStatus" type="tns:ebMSMessageStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dataSource">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="contentId" type="xs:string"/>
          <xs:element name="contentType" type="xs:string"/>
          <xs:element name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resendMessage">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resendMessageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendMessage">
        <xs:sequence>
          <xs:element name="message" type="tns:messageRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageRequest">
        <xs:sequence>
          <xs:element name="properties" type="tns:messageRequestProperties"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="dataSource" type="tns:dataSource"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messageRequestProperties">
        <xs:sequence>
          <xs:element name="cpaId" type="xs:string"/>
          <xs:element name="fromPartyId" type="xs:string"/>
          <xs:element name="fromRole" type="xs:string"/>
          <xs:element minOccurs="0" name="toPartyId" type="xs:string"/>
          <xs:element minOccurs="0" name="toRole" type="xs:string"/>
          <xs:element name="service" type="xs:string"/>
          <xs:element name="action" type="xs:string"/>
          <xs:element minOccurs="0" name="conversationId" type="xs:string"/>
          <xs:element minOccurs="0" name="messageId" type="xs:string"/>
          <xs:element minOccurs="0" name="refToMessageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendMessageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ping">
        <xs:sequence>
          <xs:element name="cpaId" type="xs:string"/>
          <xs:element name="fromPartyId" type="xs:string"/>
          <xs:element name="toPartyId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pingResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="processMessageEvent">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="processMessageEventResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getUnprocessedMessageIds">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageFilter" type="tns:messageFilter"/>
          <xs:element minOccurs="0" name="maxNr" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUnprocessedMessageIdsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="processMessage">
        <xs:sequence>
          <xs:element name="messageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="processMessageResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:simpleType name="ebMSMessageStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNAUTHORIZED"/>
          <xs:enumeration value="NOT_RECOGNIZED"/>
          <xs:enumeration value="RECEIVED"/>
          <xs:enumeration value="PROCESSED"/>
          <xs:enumeration value="FORWARDED"/>
          <xs:enumeration value="FAILED"/>
          <xs:enumeration value="CREATED"/>
          <xs:enumeration value="DELIVERY_FAILED"/>
          <xs:enumeration value="DELIVERED"/>
          <xs:enumeration value="EXPIRED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="messageEventType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="RECEIVED"/>
          <xs:enumeration value="DELIVERED"/>
          <xs:enumeration value="FAILED"/>
          <xs:enumeration value="EXPIRED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="EbMSMessageServiceException" type="tns:EbMSMessageServiceException"/>
      <xs:complexType name="EbMSMessageServiceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getMessageResponse">
    <wsdl:part element="tns:getMessageResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageStatus">
    <wsdl:part element="tns:getMessageStatus" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageStatusResponse">
    <wsdl:part element="tns:getMessageStatusResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessage">
    <wsdl:part element="tns:getMessage" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resendMessage">
    <wsdl:part element="tns:resendMessage" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendMessage">
    <wsdl:part element="tns:sendMessage" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ping">
    <wsdl:part element="tns:ping" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnprocessedMessageIds">
    <wsdl:part element="tns:getUnprocessedMessageIds" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnprocessedMessageEventsResponse">
    <wsdl:part element="tns:getUnprocessedMessageEventsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMessage">
    <wsdl:part element="tns:processMessage" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="EbMSMessageServiceException">
    <wsdl:part element="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendMessageResponse">
    <wsdl:part element="tns:sendMessageResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMessageEventResponse">
    <wsdl:part element="tns:processMessageEventResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnprocessedMessageIdsResponse">
    <wsdl:part element="tns:getUnprocessedMessageIdsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="pingResponse">
    <wsdl:part element="tns:pingResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnprocessedMessageEvents">
    <wsdl:part element="tns:getUnprocessedMessageEvents" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resendMessageResponse">
    <wsdl:part element="tns:resendMessageResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMessageResponse">
    <wsdl:part element="tns:processMessageResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMessageEvent">
    <wsdl:part element="tns:processMessageEvent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="EbMSMessageService">
    <wsdl:operation name="getMessageStatus">
      <wsdl:input message="tns:getMessageStatus" name="getMessageStatus"></wsdl:input>
      <wsdl:output message="tns:getMessageStatusResponse" name="getMessageStatusResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnprocessedMessageEvents">
      <wsdl:input message="tns:getUnprocessedMessageEvents" name="getUnprocessedMessageEvents"></wsdl:input>
      <wsdl:output message="tns:getUnprocessedMessageEventsResponse" name="getUnprocessedMessageEventsResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <wsdl:input message="tns:getMessage" name="getMessage"></wsdl:input>
      <wsdl:output message="tns:getMessageResponse" name="getMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resendMessage">
      <wsdl:input message="tns:resendMessage" name="resendMessage"></wsdl:input>
      <wsdl:output message="tns:resendMessageResponse" name="resendMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendMessage">
      <wsdl:input message="tns:sendMessage" name="sendMessage"></wsdl:input>
      <wsdl:output message="tns:sendMessageResponse" name="sendMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ping">
      <wsdl:input message="tns:ping" name="ping"></wsdl:input>
      <wsdl:output message="tns:pingResponse" name="pingResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="processMessageEvent">
      <wsdl:input message="tns:processMessageEvent" name="processMessageEvent"></wsdl:input>
      <wsdl:output message="tns:processMessageEventResponse" name="processMessageEventResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnprocessedMessageIds">
      <wsdl:input message="tns:getUnprocessedMessageIds" name="getUnprocessedMessageIds"></wsdl:input>
      <wsdl:output message="tns:getUnprocessedMessageIdsResponse" name="getUnprocessedMessageIdsResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="processMessage">
      <wsdl:input message="tns:processMessage" name="processMessage"></wsdl:input>
      <wsdl:output message="tns:processMessageResponse" name="processMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:EbMSMessageServiceException" name="EbMSMessageServiceException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EbMSMessageServiceSoapBinding" type="tns:EbMSMessageService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getMessageStatus">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getMessageStatus">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageStatusResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnprocessedMessageEvents">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUnprocessedMessageEvents">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnprocessedMessageEventsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getMessage">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resendMessage">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="resendMessage">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="resendMessageResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendMessage">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sendMessage">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendMessageResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ping">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="ping">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="pingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="processMessageEvent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="processMessageEvent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="processMessageEventResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnprocessedMessageIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUnprocessedMessageIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnprocessedMessageIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="processMessage">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="processMessage">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="processMessageResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EbMSMessageServiceException">
        <soap:fault name="EbMSMessageServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EbMSMessageService">
    <wsdl:port binding="tns:EbMSMessageServiceSoapBinding" name="EbMSMessagePort">
      <soap:address location="http://localhost:8080/service/ebms"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/service/ebms</con:endpoint></con:endpoints><con:operation id="8c2f59a5-2338-4c05-adf4-1adca5e6af55" isOneWay="false" action="" name="getMessage" bindingOperationName="getMessage" type="Request-Response" outputName="getMessageResponse" inputName="getMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b44dda47-03b3-4fb6-b9bf-5beb5c31910e" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getMessage>
         <messageId>?</messageId>
      </ns:getMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/ebms/2.10/EbMSMessageService/GetMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="af00c61b-55df-4982-826d-c3426a504c8f" isOneWay="false" action="" name="getUnprocessedMessageIds" bindingOperationName="getUnprocessedMessageIds" type="Request-Response" outputName="getUnprocessedMessageIdsResponse" inputName="getUnprocessedMessageIds" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ff0677fc-8882-4849-86dc-228e1ccae732" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getUnprocessedMessageIds/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/ebms/2.10/EbMSMessageService/GetMessageIds"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ba2991e2-9e89-4275-b4e3-156687240c11" isOneWay="false" action="" name="getMessageStatus" bindingOperationName="getMessageStatus" type="Request-Response" outputName="getMessageStatusResponse" inputName="getMessageStatus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a84ef8f2-96bc-4f2c-a7cc-ac7c481d34f9" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getMessageStatus>
         <messageId>3190d2a9-71c3-42eb-883c-504bd36b4bfb@ebms-digipoort</messageId>
      </ns:getMessageStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/ebms/2.10/EbMSMessageService/GetMessageStatus"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="0b59312b-f3c1-48d9-9415-8a51be3d99d4" isOneWay="false" action="" name="ping" bindingOperationName="ping" type="Request-Response" outputName="pingResponse" inputName="ping" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="897578f0-0ca5-404d-a5f0-61c054946e90" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:ping>
         <cpaId>cpaStubEBF.rm.https.signed</cpaId>
         <fromPartyId>urn:osb:oin:00000000000000000000</fromPartyId>
         <toPartyId>urn:osb:oin:00000000000000000001</toPartyId>
      </ns:ping>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/ebms/2.10/EbMSMessageService/Ping"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="134418dd-f9ac-466d-89ba-f51423a9b455" isOneWay="false" action="" name="processMessage" bindingOperationName="processMessage" type="Request-Response" outputName="processMessageResponse" inputName="processMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="179911e9-f7fc-4606-96c5-7f6e035c5b4d" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.17">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:ProcessMessage>
         <MessageId>?</MessageId>
      </ns:ProcessMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/ebms/2.10/EbMSMessageService/ProcessMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f62f6da8-7737-4d9a-906a-89977ca7d81a" isOneWay="false" action="" name="sendMessage" bindingOperationName="sendMessage" type="Request-Response" outputName="sendMessageResponse" inputName="sendMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3841c52f-aa48-4075-b461-0159cc124f62" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:sendMessage>
         <message>
            <properties>
               <cpaId>cpaStubEBF.rm.https.signed</cpaId>
               <fromPartyId>urn:osb:oin:00000000000000000000</fromPartyId>
               <fromRole>DIGIPOORT</fromRole>
               <toPartyId>urn:osb:oin:00000000000000000001</toPartyId>
               <toRole>OVERHEID</toRole>
               <service>urn:osb:services:osb:afleveren:1.1$1.0</service>
               <action>afleveren</action>
            </properties>
            <dataSource>
               <name>test.txt</name>
               <contentType>text/plain</contentType>
               <content>U2FtcGxlIG1lc3NhZ2Uu</content>
            </dataSource>
         </message>
      </ns:sendMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.ordina.nl/ebms/2.10/EbMSMessageService/SendMessage"/><con:wsrmConfig version="1.2"/></con:call><con:call id="363549a8-fa5e-488b-8063-a5941b4e0d83" name="Request 2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:sendMessage>
         <message>
            <properties>
               <cpaId>cpaStubEBF.rm.https.signed</cpaId>
               <fromPartyId>urn:osb:oin:00000000000000000000</fromPartyId>
               <fromRole>DIGIPOORT</fromRole>
               <toPartyId>urn:osb:oin:00000000000000000001</toPartyId>
               <toRole>OVERHEID</toRole>
               <service>urn:osb:services:osb:afleveren:1.1$1.0</service>
               <action>afleveren</action>
            </properties>
            <dataSource>
               <name>test.txt</name>
               <contentType>text/plain</contentType>
               <content>U2FtcGxlIG1lc3NhZ2Uu</content>
            </dataSource>
         </message>
      </ns:sendMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.ebms.clockwork.nl/EbMSMessageService/SendMessage"/><con:wsrmConfig version="1.2"/></con:call><con:call id="aaaf2b8e-6aa8-4e7f-b3a9-0d4469a36cd7" name="Request 3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:sendMessage>
         <message>
            <properties>
               <cpaId>cpaStubEBF.rm.https.signed</cpaId>
               <fromPartyId>urn:osb:oin:00000000000000000000</fromPartyId>
               <fromRole>DIGIPOORT</fromRole>
               <toPartyId>urn:osb:oin:00000000000000000001</toPartyId>
               <toRole>OVERHEID</toRole>
               <service>urn:osb:services:osb:afleveren:1.1$1.0</service>
               <action>afleveren</action>
            </properties>
            <dataSource>
               <name>test.txt</name>
               <contentType>text/plain</contentType>
               <content>U2FtcGxlIG1lc3NhZ2Uu</content>
            </dataSource>
         </message>
      </ns:sendMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.ebms.clockwork.nl/EbMSMessageService/SendMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ddc7c97e-c784-4d57-b978-3f59cf4dd4ed" isOneWay="false" action="" name="processMessageEvent" bindingOperationName="processMessageEvent" type="Request-Response" outputName="processMessageEventResponse" inputName="processMessageEvent" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ff23a3e6-c0b5-4639-a39d-54c39248a91d" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processMessageEvent>
         <messageId>?</messageId>
      </ns:processMessageEvent>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.ebms.clockwork.nl/EbMSMessageService/ProcessMessageEvent"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c38c0079-9842-4265-8f74-818ba812de02" isOneWay="false" action="" name="resendMessage" bindingOperationName="resendMessage" type="Request-Response" outputName="resendMessageResponse" inputName="resendMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e4a5b7f0-1517-4bef-8e4c-7d699516f37b" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:resendMessage>
         <messageId>?</messageId>
      </ns:resendMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.ebms.clockwork.nl/EbMSMessageService/ResendMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="8c7773f8-1a4c-4cf1-a8c4-873f613b6e7c" isOneWay="false" action="" name="getUnprocessedMessageEvents" bindingOperationName="getUnprocessedMessageEvents" type="Request-Response" outputName="getUnprocessedMessageEventsResponse" inputName="getUnprocessedMessageEvents" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8608a40a-fe8e-4f5c-b65a-65179a77a622" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getUnprocessedMessageEvents>
      <messageFilter>
         <messageId>RECEIVED</messageId>
      </messageFilter>
      </ns:getUnprocessedMessageEvents>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.ebms.clockwork.nl/EbMSMessageService/GetMessageEvents"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="357d7f75-9c79-41ff-9475-9e6d47f04e19" wsaVersion="NONE" name="EbMS" type="wsdl" bindingName="{http://www.ebms.com/ebms/v2}EbMS" soapVersion="1_1" anonymous="optional" definition="/home/edwin/ebms/ebms-core/resources/test/ebms.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/edwin/ebms/ebms-core/resources/test/ebms.wsdl"><con:part><con:url>file:/home/edwin/ebms/ebms-core/resources/test/ebms.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="http://www.ebms.com/ebms/v2" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.ebms.com/ebms/v2" xmlns:ns1="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="root" nillable="true" type="xs:anyType"/>
      <xsd:attribute name="href" type="xs:anyURI"/>
      <xsd:attribute name="role" type="xs:anyURI"/>
      <xsd:attribute name="type" type="xs:string"/>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.w3.org/2000/09/xmldsig#" xmlns:tns="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="CanonicalizationMethod" nillable="true" type="tns:CanonicalizationMethodType"/>
      <xsd:element name="DSAKeyValue" nillable="true" type="tns:DSAKeyValueType"/>
      <xsd:element name="DigestMethod" nillable="true" type="tns:DigestMethodType"/>
      <xsd:element name="DigestValue" nillable="true" type="xsd:base64Binary"/>
      <xsd:element name="KeyInfo" nillable="true" type="tns:KeyInfoType"/>
      <xsd:element name="KeyName" nillable="true" type="xsd:string"/>
      <xsd:element name="KeyValue" nillable="true" type="tns:KeyValueType"/>
      <xsd:element name="Manifest" nillable="true" type="tns:ManifestType"/>
      <xsd:element name="MgmtData" nillable="true" type="xsd:string"/>
      <xsd:element name="Object" nillable="true" type="tns:ObjectType"/>
      <xsd:element name="PGPData" nillable="true" type="tns:PGPDataType"/>
      <xsd:element name="RSAKeyValue" nillable="true" type="tns:RSAKeyValueType"/>
      <xsd:element name="Reference" nillable="true" type="tns:ReferenceType"/>
      <xsd:element name="RetrievalMethod" nillable="true" type="tns:RetrievalMethodType"/>
      <xsd:element name="SPKIData" nillable="true" type="tns:SPKIDataType"/>
      <xsd:element name="Signature" nillable="true" type="tns:SignatureType"/>
      <xsd:element name="SignatureMethod" nillable="true" type="tns:SignatureMethodType"/>
      <xsd:element name="SignatureProperties" nillable="true" type="tns:SignaturePropertiesType"/>
      <xsd:element name="SignatureProperty" nillable="true" type="tns:SignaturePropertyType"/>
      <xsd:element name="SignatureValue" nillable="true" type="tns:SignatureValueType"/>
      <xsd:element name="SignedInfo" nillable="true" type="tns:SignedInfoType"/>
      <xsd:element name="Transform" nillable="true" type="tns:TransformType"/>
      <xsd:element name="Transforms" nillable="true" type="tns:TransformsType"/>
      <xsd:element name="X509Data" nillable="true" type="tns:X509DataType"/>
      <xsd:complexType name="ReferenceType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Transforms" type="tns:TransformsType"/>
          <xsd:element name="DigestMethod" type="tns:DigestMethodType"/>
          <xsd:element name="DigestValue" type="xsd:base64Binary"/>
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID"/>
        <xsd:attribute name="URI" type="xsd:anyURI"/>
        <xsd:attribute name="Type" type="xsd:anyURI"/>
      </xsd:complexType>
      <xsd:complexType name="TransformsType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Transform" type="tns:TransformType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType mixed="true" name="TransformType">
        <xsd:sequence>
          <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="XPath" type="xsd:string"/>
            <xsd:any namespace="##other" processContents="lax"/>
          </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required"/>
      </xsd:complexType>
      <xsd:complexType mixed="true" name="ObjectType">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID"/>
        <xsd:attribute name="MimeType" type="xsd:string"/>
        <xsd:attribute name="Encoding" type="xsd:anyURI"/>
      </xsd:complexType>
      <xsd:complexType name="DSAKeyValueType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="P" type="xsd:base64Binary"/>
          <xsd:element minOccurs="0" name="Q" type="xsd:base64Binary"/>
          <xsd:element minOccurs="0" name="G" type="xsd:base64Binary"/>
          <xsd:element name="Y" type="xsd:base64Binary"/>
          <xsd:element minOccurs="0" name="J" type="xsd:base64Binary"/>
          <xsd:element minOccurs="0" name="Seed" type="xsd:base64Binary"/>
          <xsd:element minOccurs="0" name="PgenCounter" type="xsd:base64Binary"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SignedInfoType">
        <xsd:sequence>
          <xsd:element name="CanonicalizationMethod" type="tns:CanonicalizationMethodType"/>
          <xsd:element name="SignatureMethod" type="tns:SignatureMethodType"/>
          <xsd:element maxOccurs="unbounded" name="Reference" type="tns:ReferenceType"/>
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID"/>
      </xsd:complexType>
      <xsd:complexType mixed="true" name="CanonicalizationMethodType">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
        <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required"/>
      </xsd:complexType>
      <xsd:complexType mixed="true" name="SignatureMethodType">
        <xsd:sequence>
          <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="HMACOutputLength" type="xsd:integer"/>
            <xsd:any namespace="##other" processContents="lax"/>
          </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="PGPDataType">
        <xsd:sequence>
          <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="PGPKeyID" type="xsd:base64Binary"/>
            <xsd:element name="PGPKeyPacket" type="xsd:base64Binary"/>
            <xsd:any namespace="##other" processContents="lax"/>
          </xsd:choice>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SignaturePropertiesType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="SignatureProperty" type="tns:SignaturePropertyType"/>
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID"/>
      </xsd:complexType>
      <xsd:complexType mixed="true" name="SignaturePropertyType">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
        <xsd:attribute name="Target" type="xsd:anyURI" use="required"/>
        <xsd:attribute name="Id" type="xsd:ID"/>
      </xsd:complexType>
      <xsd:complexType name="ManifestType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Reference" type="tns:ReferenceType"/>
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID"/>
      </xsd:complexType>
      <xsd:complexType mixed="true" name="KeyValueType">
        <xsd:sequence>
          <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element ref="tns:DSAKeyValue"/>
            <xsd:element ref="tns:RSAKeyValue"/>
            <xsd:any namespace="##other" processContents="lax"/>
          </xsd:choice>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SignatureValueType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:base64Binary">
            <xsd:attribute name="Id" type="xsd:ID"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="SignatureType">
        <xsd:sequence>
          <xsd:element name="SignedInfo" type="tns:SignedInfoType"/>
          <xsd:element name="SignatureValue" type="tns:SignatureValueType"/>
          <xsd:element minOccurs="0" name="KeyInfo" type="tns:KeyInfoType"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Object" type="tns:ObjectType"/>
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID"/>
      </xsd:complexType>
      <xsd:complexType mixed="true" name="KeyInfoType">
        <xsd:sequence>
          <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element ref="tns:SPKIData"/>
            <xsd:element ref="tns:MgmtData"/>
            <xsd:element ref="tns:KeyValue"/>
            <xsd:element ref="tns:PGPData"/>
            <xsd:element ref="tns:RetrievalMethod"/>
            <xsd:element ref="tns:KeyName"/>
            <xsd:element ref="tns:X509Data"/>
            <xsd:any namespace="##other" processContents="lax"/>
          </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID"/>
      </xsd:complexType>
      <xsd:complexType name="SPKIDataType">
        <xsd:sequence>
          <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="SPKISexp" type="xsd:base64Binary"/>
            <xsd:any namespace="##other" processContents="lax"/>
          </xsd:choice>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="X509DataType">
        <xsd:sequence>
          <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="X509IssuerSerial" type="tns:X509IssuerSerialType"/>
            <xsd:element name="X509Certificate" type="xsd:base64Binary"/>
            <xsd:element name="X509SubjectName" type="xsd:string"/>
            <xsd:element name="X509SKI" type="xsd:base64Binary"/>
            <xsd:element name="X509CRL" type="xsd:base64Binary"/>
            <xsd:any namespace="##other" processContents="lax"/>
          </xsd:choice>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="X509IssuerSerialType">
        <xsd:sequence>
          <xsd:element name="X509IssuerName" type="xsd:string"/>
          <xsd:element name="X509SerialNumber" type="xsd:integer"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RSAKeyValueType">
        <xsd:sequence>
          <xsd:element name="Modulus" type="xsd:base64Binary"/>
          <xsd:element name="Exponent" type="xsd:base64Binary"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType mixed="true" name="DigestMethodType">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
        <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="RetrievalMethodType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Transforms" type="tns:TransformsType"/>
        </xsd:sequence>
        <xsd:attribute name="URI" type="xsd:anyURI"/>
        <xsd:attribute name="Type" type="xsd:anyURI"/>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.ez.nl/ezpoort/v1" xmlns="http://www.ez.nl/ezpoort/v1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="Attachment" nillable="true" type="xsd:base64Binary"/>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns1="http://www.w3.org/2000/09/xmldsig#" xmlns:ns2="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns3="http://www.w3.org/1999/xlink" xmlns:tns="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/"/>
      <xsd:import namespace="http://www.w3.org/1999/xlink"/>
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
      <xsd:element name="AckRequested">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="ns2:actor"/>
          <xsd:attribute ref="tns:signed" use="required"/>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:version" use="required"/>
          <xsd:attribute ref="ns2:mustUnderstand" use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="Acknowledgment">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Timestamp" type="xsd:dateTime"/>
            <xsd:element name="RefToMessageId" type="xsd:string"/>
            <xsd:element minOccurs="0" ref="tns:From"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" ref="ns1:Reference"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="ns2:actor"/>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:version" use="required"/>
          <xsd:attribute ref="ns2:mustUnderstand" use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="Action" nillable="true" type="xsd:string"/>
      <xsd:element name="CPAId" nillable="true" type="xsd:string"/>
      <xsd:element name="ConversationId" nillable="true" type="xsd:string"/>
      <xsd:element name="Description">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute ref="xml:lang" use="required"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="DuplicateElimination" nillable="true" type="xsd:anyType"/>
      <xsd:element name="Error">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" ref="tns:Description"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:codeContext"/>
          <xsd:attribute ref="tns:errorCode" use="required"/>
          <xsd:attribute ref="tns:severity" use="required"/>
          <xsd:attribute ref="tns:location"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ErrorList">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" ref="tns:Error"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="tns:highestSeverity" use="required"/>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:version" use="required"/>
          <xsd:attribute ref="ns2:mustUnderstand" use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="From">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" ref="tns:PartyId"/>
            <xsd:element minOccurs="0" name="Role" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="Manifest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" ref="tns:Reference"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:version" use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="MessageData">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="MessageId" type="xsd:string"/>
            <xsd:element name="Timestamp" type="xsd:dateTime"/>
            <xsd:element minOccurs="0" name="RefToMessageId" type="xsd:string"/>
            <xsd:element minOccurs="0" name="TimeToLive" type="xsd:dateTime"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="MessageHeader">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element ref="tns:From"/>
            <xsd:element ref="tns:To"/>
            <xsd:element name="CPAId" type="xsd:string"/>
            <xsd:element name="ConversationId" type="xsd:string"/>
            <xsd:element ref="tns:Service"/>
            <xsd:element name="Action" type="xsd:string"/>
            <xsd:element ref="tns:MessageData"/>
            <xsd:element minOccurs="0" name="DuplicateElimination" type="xsd:anyType"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:Description"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:version" use="required"/>
          <xsd:attribute ref="ns2:mustUnderstand" use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="MessageId" nillable="true" type="xsd:string"/>
      <xsd:element name="MessageOrder">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="SequenceNumber" type="tns:sequenceNumber.type"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:version" use="required"/>
          <xsd:attribute ref="ns2:mustUnderstand" use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="PartyId">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute ref="tns:type"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="RefToMessageId" nillable="true" type="xsd:string"/>
      <xsd:element name="Reference">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:Schema"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:Description"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="ns3:type"/>
          <xsd:attribute ref="ns3:href" use="required"/>
          <xsd:attribute ref="ns3:role"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="Schema">
        <xsd:complexType>
          <xsd:sequence/>
          <xsd:attribute ref="tns:location" use="required"/>
          <xsd:attribute ref="tns:version"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="SequenceNumber" nillable="true" type="tns:sequenceNumber.type"/>
      <xsd:element name="Service">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute ref="tns:type"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="StatusRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="RefToMessageId" type="xsd:string"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:version" use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="StatusResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="RefToMessageId" type="xsd:string"/>
            <xsd:element minOccurs="0" name="Timestamp" type="xsd:dateTime"/>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="tns:messageStatus" use="required"/>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:version" use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="SyncReply">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
          </xsd:sequence>
          <xsd:attribute ref="ns2:actor" use="required"/>
          <xsd:attribute ref="tns:id"/>
          <xsd:attribute ref="tns:version" use="required"/>
          <xsd:attribute ref="ns2:mustUnderstand" use="required"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="TimeToLive" nillable="true" type="xsd:anySimpleType"/>
      <xsd:element name="Timestamp" nillable="true" type="xsd:anySimpleType"/>
      <xsd:element name="To">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" ref="tns:PartyId"/>
            <xsd:element minOccurs="0" name="Role" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="sequenceNumber.type">
        <xsd:simpleContent>
          <xsd:extension base="xsd:integer">
            <xsd:attribute ref="tns:status"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="status.type">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Reset"/>
          <xsd:enumeration value="Continue"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="severity.type">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Warning"/>
          <xsd:enumeration value="Error"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="messageStatus.type">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="UnAuthorized"/>
          <xsd:enumeration value="NotRecognized"/>
          <xsd:enumeration value="Received"/>
          <xsd:enumeration value="Processed"/>
          <xsd:enumeration value="Forwarded"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:attribute name="codeContext" type="xsd:anyURI"/>
      <xsd:attribute name="errorCode" type="xsd:string"/>
      <xsd:attribute name="highestSeverity" type="tns:severity.type"/>
      <xsd:attribute name="id" type="xsd:ID"/>
      <xsd:attribute name="location" type="xsd:string"/>
      <xsd:attribute name="messageStatus" type="tns:messageStatus.type"/>
      <xsd:attribute name="severity" type="tns:severity.type"/>
      <xsd:attribute name="signed" type="xsd:boolean"/>
      <xsd:attribute name="status" type="tns:status.type"/>
      <xsd:attribute name="type" type="xsd:string"/>
      <xsd:attribute name="version" type="xsd:string"/>
    </xsd:schema>
  </types>
  <message name="EbMSMSHRequest">
    <part name="MessageHeader" element="ns1:MessageHeader"/>
  </message>
  <message name="EbMSRequest">
    <part name="MessageHeader" element="ns1:MessageHeader"/>
    <part name="Manifest" element="ns1:Manifest"/>
  </message>
  <message name="EbMSResponse">
    <part name="MessageHeader" element="ns1:MessageHeader"/>
  </message>
  <portType name="EbMS">
    <operation name="EbMSMSHRequestSync">
      <input message="tns:EbMSMSHRequest"/>
      <output message="tns:EbMSResponse"/>
    </operation>
    <operation name="EbMSRequestSync">
      <input message="tns:EbMSRequest"/>
      <output message="tns:EbMSResponse"/>
    </operation>
    <operation name="EbMSMSHRequest">
      <input message="tns:EbMSMSHRequest"/>
    </operation>
    <operation name="EbMSRequest">
      <input message="tns:EbMSRequest"/>
    </operation>
    <operation name="EbMSResponse">
      <input message="tns:EbMSResponse"/>
    </operation>
  </portType>
  <binding name="EbMS" type="tns:EbMS">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="EbMSMSHRequestSync">
      <soap:operation soapAction="ebXML" style="document"/>
      <input>
        <soap:header part="MessageHeader" message="tns:EbMSMSHRequest" use="literal"/>
      </input>
      <output>
        <soap:header part="MessageHeader" message="tns:EbMSResponse" use="literal"/>
      </output>
    </operation>
    <operation name="EbMSRequestSync">
      <soap:operation soapAction="ebXML" style="document"/>
      <input>
        <soap:header part="MessageHeader" message="tns:EbMSRequest" use="literal"/>
        <soap:body parts="Manifest" use="literal"/>
      </input>
      <output>
        <soap:header part="MessageHeader" message="tns:EbMSResponse" use="literal"/>
      </output>
    </operation>
    <operation name="EbMSMSHRequest">
      <soap:operation soapAction="ebXML" style="document"/>
      <input>
        <soap:header part="MessageHeader" message="tns:EbMSMSHRequest" use="literal"/>
      </input>
    </operation>
    <operation name="EbMSRequest">
      <soap:operation soapAction="ebXML" style="document"/>
      <input>
        <soap:header part="MessageHeader" message="tns:EbMSRequest" use="literal"/>
        <soap:body parts="Manifest" use="literal"/>
      </input>
    </operation>
    <operation name="EbMSResponse">
      <soap:operation soapAction="ebXML" style="document"/>
      <input>
        <soap:header part="MessageHeader" message="tns:EbMSResponse" use="literal"/>
      </input>
    </operation>
  </binding>
  <service name="EbMSService">
    <port binding="tns:EbMS" name="EbMS">
      <soap:address location="http://localhost:8080/ebms"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8888/ebms</con:endpoint></con:endpoints><con:operation id="1b1a667e-a7dd-48f2-aeb7-5893e47625db" isOneWay="false" action="ebXML" name="EbMSRequest" bindingOperationName="EbMSRequest" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2a4e2aef-30a5-4d47-84fb-b66baa36439e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:msg="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:xlin="http://www.w3.org/1999/xlink">
   <soapenv:Header/>
   <soapenv:Body>
      <msg:Manifest msg:id="?" msg:version="?">
         <!--1 or more repetitions:-->
         <msg:Reference msg:id="?" xlin:type="?" xlin:href="?" xlin:role="?">
            <!--Zero or more repetitions:-->
            <msg:Schema msg:location="?" msg:version="?"/>
            <!--Zero or more repetitions:-->
            <msg:Description xml:lang="?">?</msg:Description>
            <!--You may enter ANY elements at this point-->
         </msg:Reference>
         <!--You may enter ANY elements at this point-->
      </msg:Manifest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ebXML"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="a1c8df05-ec13-4e78-a114-756f259dfb4a" isOneWay="false" action="ebXML" name="EbMSResponse" bindingOperationName="EbMSResponse" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8a5a28d8-2c38-432f-b2d4-236e2ce03991" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:msg="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <msg:MessageHeader msg:id="?" msg:version="?" soapenv:mustUnderstand="?">
         <msg:From>
            <!--1 or more repetitions:-->
            <msg:PartyId msg:type="?">?</msg:PartyId>
            <!--Optional:-->
            <msg:Role>?</msg:Role>
         </msg:From>
         <msg:To>
            <!--1 or more repetitions:-->
            <msg:PartyId msg:type="?">?</msg:PartyId>
            <!--Optional:-->
            <msg:Role>?</msg:Role>
         </msg:To>
         <msg:CPAId>?</msg:CPAId>
         <msg:ConversationId>?</msg:ConversationId>
         <msg:Service msg:type="?">?</msg:Service>
         <msg:Action>?</msg:Action>
         <msg:MessageData>
            <msg:MessageId>?</msg:MessageId>
            <msg:Timestamp>?</msg:Timestamp>
            <!--Optional:-->
            <msg:RefToMessageId>?</msg:RefToMessageId>
            <!--Optional:-->
            <msg:TimeToLive>?</msg:TimeToLive>
         </msg:MessageData>
         <!--Optional:-->
         <msg:DuplicateElimination>?</msg:DuplicateElimination>
         <!--Zero or more repetitions:-->
         <msg:Description xml:lang="?">?</msg:Description>
         <!--You may enter ANY elements at this point-->
      </msg:MessageHeader>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="ebXML"/></con:call></con:operation><con:operation id="6d78932c-9d81-42dc-9206-0d8360b2b673" isOneWay="false" action="ebXML" name="EbMSMSHRequestSync" bindingOperationName="EbMSMSHRequestSync" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="83fd17de-38bb-412f-940a-fbb51a875e86" name="Ping"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000000</eb:PartyId>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000001</eb:PartyId>
            </eb:To>
            <eb:CPAId>cpaStubEBF.rm.http.unsigned.sync</eb:CPAId>
            <eb:ConversationId>215dc50d-e4b2-4739-9278-7d00a776c035</eb:ConversationId>
            <eb:Service>urn:oasis:names:tc:ebxml-msg:service</eb:Service>
            <eb:Action>Ping</eb:Action>
            <eb:MessageData>
                <eb:MessageId>215dc50d-e4b2-4739-9278-7d00a776c035@localhost</eb:MessageId>
                <eb:Timestamp>2016-03-03T14:33:14Z</eb:Timestamp>
            </eb:MessageData>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body/>
</soap:Envelope>
]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ebXML"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="d6ce61b5-2c68-4156-96a4-b60e2ff8442f" isOneWay="false" action="ebXML" name="EbMSRequestSync" bindingOperationName="EbMSRequestSync" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="db0a8ca2-00f5-4082-90ac-edb92fee6828" name="Request Ok"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000000</eb:PartyId>
                <eb:Role>DIGIPOORT</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000001</eb:PartyId>
                <eb:Role>OVERHEID</eb:Role>
            </eb:To>
            <eb:CPAId>cpaStubEBF.rm.http.unsigned.sync</eb:CPAId>
            <eb:ConversationId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5</eb:ConversationId>
            <eb:Service eb:type="urn:osb:services">osb:afleveren:1.1$1.0</eb:Service>
            <eb:Action>afleveren</eb:Action>
            <eb:MessageData>
                <eb:MessageId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5@localhost</eb:MessageId>
                <eb:Timestamp>2016-03-03T14:38:11Z</eb:Timestamp>
                <eb:TimeToLive>2016-03-03T15:08:11Z</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAJOCY0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgAk4JjSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>9705d4d7-0d9e-449a-9777-229d56a7b320</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ebXML"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a34b2b66-19d5-45ac-8711-fda6f3ffdb65" name="Request Expired"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000000</eb:PartyId>
                <eb:Role>DIGIPOORT</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000001</eb:PartyId>
                <eb:Role>OVERHEID</eb:Role>
            </eb:To>
            <eb:CPAId>cpaStubEBF.rm.http.unsigned.sync</eb:CPAId>
            <eb:ConversationId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5</eb:ConversationId>
            <eb:Service eb:type="urn:osb:services">osb:afleveren:1.1$1.0</eb:Service>
            <eb:Action>afleveren</eb:Action>
            <eb:MessageData>
                <eb:MessageId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5@localhost</eb:MessageId>
                <eb:Timestamp>2016-03-03T14:38:11Z</eb:Timestamp>
                <eb:TimeToLive>2016-03-03T15:08:11Z</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAJOCY0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgAk4JjSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>9705d4d7-0d9e-449a-9777-229d56a7b320</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ebXML"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="37749961-fef0-4b64-8234-2dd1ef024ad1" isOneWay="false" action="ebXML" name="EbMSMSHRequest" bindingOperationName="EbMSMSHRequest" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="87674421-c926-4e6e-a504-f6987d1812d0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:msg="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <msg:MessageHeader msg:id="?" msg:version="?" soapenv:mustUnderstand="?">
         <msg:From>
            <!--1 or more repetitions:-->
            <msg:PartyId msg:type="?">?</msg:PartyId>
            <!--Optional:-->
            <msg:Role>?</msg:Role>
         </msg:From>
         <msg:To>
            <!--1 or more repetitions:-->
            <msg:PartyId msg:type="?">?</msg:PartyId>
            <!--Optional:-->
            <msg:Role>?</msg:Role>
         </msg:To>
         <msg:CPAId>?</msg:CPAId>
         <msg:ConversationId>?</msg:ConversationId>
         <msg:Service msg:type="?">?</msg:Service>
         <msg:Action>?</msg:Action>
         <msg:MessageData>
            <msg:MessageId>?</msg:MessageId>
            <msg:Timestamp>?</msg:Timestamp>
            <!--Optional:-->
            <msg:RefToMessageId>?</msg:RefToMessageId>
            <!--Optional:-->
            <msg:TimeToLive>?</msg:TimeToLive>
         </msg:MessageData>
         <!--Optional:-->
         <msg:DuplicateElimination>?</msg:DuplicateElimination>
         <!--Zero or more repetitions:-->
         <msg:Description xml:lang="?">?</msg:Description>
         <!--You may enter ANY elements at this point-->
      </msg:MessageHeader>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="ebXML"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7b415687-34a8-4e50-a899-2ae3901c0879" wsaVersion="NONE" name="CertificateMappingServiceSoapBinding" type="wsdl" bindingName="{http://www.ordina.nl/cpa/certificateMapping/2.18}CertificateMappingServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/service/certificateMapping?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/service/certificateMapping?wsdl"><con:part><con:url>http://localhost:8080/service/certificateMapping?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="CertificateMappingService" targetNamespace="http://www.ordina.nl/cpa/certificateMapping/2.18" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.ordina.nl/cpa/certificateMapping/2.18" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.ordina.nl/cpa/certificateMapping/2.18" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="deleteCertificateMapping" type="tns:deleteCertificateMapping"/>
      <xs:element name="deleteCertificateMappingResponse" type="tns:deleteCertificateMappingResponse"/>
      <xs:element name="getCertificateMappings" type="tns:getCertificateMappings"/>
      <xs:element name="getCertificateMappingsResponse" type="tns:getCertificateMappingsResponse"/>
      <xs:element name="setCertificateMapping" type="tns:setCertificateMapping"/>
      <xs:element name="setCertificateMappingResponse" type="tns:setCertificateMappingResponse"/>
      <xs:complexType name="deleteCertificateMapping">
        <xs:sequence>
          <xs:element name="sourceCertificate" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="cpaId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCertificateMappingResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getCertificateMappings">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getCertificateMappingsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="certificate" type="tns:certificateMapping"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="certificateMapping">
        <xs:sequence>
          <xs:element name="source" type="xs:base64Binary"/>
          <xs:element name="destination" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="cpaId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setCertificateMapping">
        <xs:sequence>
          <xs:element name="certificateMapping" type="tns:certificateMapping"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setCertificateMappingResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="CertificateMappingServiceException" type="tns:CertificateMappingServiceException"/>
      <xs:complexType name="CertificateMappingServiceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="deleteCertificateMapping">
    <wsdl:part element="tns:deleteCertificateMapping" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setCertificateMappingResponse">
    <wsdl:part element="tns:setCertificateMappingResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCertificateMappings">
    <wsdl:part element="tns:getCertificateMappings" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setCertificateMapping">
    <wsdl:part element="tns:setCertificateMapping" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCertificateMappingsResponse">
    <wsdl:part element="tns:getCertificateMappingsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCertificateMappingResponse">
    <wsdl:part element="tns:deleteCertificateMappingResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CertificateMappingServiceException">
    <wsdl:part element="tns:CertificateMappingServiceException" name="CertificateMappingServiceException"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CertificateMappingService">
    <wsdl:operation name="deleteCertificateMapping">
      <wsdl:input message="tns:deleteCertificateMapping" name="deleteCertificateMapping"></wsdl:input>
      <wsdl:output message="tns:deleteCertificateMappingResponse" name="deleteCertificateMappingResponse"></wsdl:output>
      <wsdl:fault message="tns:CertificateMappingServiceException" name="CertificateMappingServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertificateMappings">
      <wsdl:input message="tns:getCertificateMappings" name="getCertificateMappings"></wsdl:input>
      <wsdl:output message="tns:getCertificateMappingsResponse" name="getCertificateMappingsResponse"></wsdl:output>
      <wsdl:fault message="tns:CertificateMappingServiceException" name="CertificateMappingServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setCertificateMapping">
      <wsdl:input message="tns:setCertificateMapping" name="setCertificateMapping"></wsdl:input>
      <wsdl:output message="tns:setCertificateMappingResponse" name="setCertificateMappingResponse"></wsdl:output>
      <wsdl:fault message="tns:CertificateMappingServiceException" name="CertificateMappingServiceException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CertificateMappingServiceSoapBinding" type="tns:CertificateMappingService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="deleteCertificateMapping">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCertificateMapping">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCertificateMappingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CertificateMappingServiceException">
        <soap:fault name="CertificateMappingServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertificateMappings">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCertificateMappings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCertificateMappingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CertificateMappingServiceException">
        <soap:fault name="CertificateMappingServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setCertificateMapping">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setCertificateMapping">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setCertificateMappingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CertificateMappingServiceException">
        <soap:fault name="CertificateMappingServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CertificateMappingService">
    <wsdl:port binding="tns:CertificateMappingServiceSoapBinding" name="CertificateMappingPort">
      <soap:address location="http://localhost:8080/service/certificateMapping"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/service/certificateMapping</con:endpoint></con:endpoints><con:operation id="1a26ea0f-6cc5-4987-95dc-4eb2447ffe6c" isOneWay="false" action="" name="deleteCertificateMapping" bindingOperationName="deleteCertificateMapping" type="Request-Response" outputName="deleteCertificateMappingResponse" inputName="deleteCertificateMapping" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="29ffba15-77bf-47ff-aaf0-3afaa92b7ba1" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/certificateMapping</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/certificateMapping/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:deleteCertificateMapping>
         <sourceCertificate>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJO
TDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNV
BAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xv
Y2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkG
A1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2Vu
MQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQ
d3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1Kkd
UYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA
9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnS
BsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUF
AAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5q
wJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpK
X2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</sourceCertificate>
      </ns:deleteCertificateMapping>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://certificate.cpa.service.ebms.clockwork.nl/CertificateMappingService/DeleteCertificateMapping"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c376dc02-aeed-427f-9fbc-c07f1ab7dd9d" isOneWay="false" action="" name="getCertificateMappings" bindingOperationName="getCertificateMappings" type="Request-Response" outputName="getCertificateMappingsResponse" inputName="getCertificateMappings" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d39ac19b-4cd1-4a25-825b-a656e01acd73" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/certificateMapping</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/certificateMapping/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getCertificateMappings/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://certificate.cpa.service.ebms.clockwork.nl/CertificateMappingService/GetCertificateMappings"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="9ae89904-f48e-486d-b2be-b4eeaaef1b30" isOneWay="false" action="" name="setCertificateMapping" bindingOperationName="setCertificateMapping" type="Request-Response" outputName="setCertificateMappingResponse" inputName="setCertificateMapping" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ceb00e18-ee30-4d34-abc0-31abbf0c4f14" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/certificateMapping</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/certificateMapping/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:setCertificateMapping>
         <certificateMapping>
            <source>MIICYTCCAcqgAwIBAgIETsDxqzANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJO
TDESMBAGA1UECBMJR3JvbmluZ2VuMRIwEAYDVQQHEwlHcm9uaW5nZW4xDzANBgNV
BAoTBk9yZGluYTESMBAGA1UECxMJQ2xvY2t3b3JrMRkwFwYDVQQDExB3d3cuY2xv
Y2t3b3JrLm5sMB4XDTExMTExNDEwNDcwN1oXDTIxMTExMTEwNDcwN1owdTELMAkG
A1UEBhMCTkwxEjAQBgNVBAgTCUdyb25pbmdlbjESMBAGA1UEBxMJR3JvbmluZ2Vu
MQ8wDQYDVQQKEwZPcmRpbmExEjAQBgNVBAsTCUNsb2Nrd29yazEZMBcGA1UEAxMQ
d3d3LmNsb2Nrd29yay5ubDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1Kkd
UYLsAJpvJc/sW+dblxhCP6Xn0UekqW4CEcpYW1AEf5ahth0bQ4+lZobEG2jVzRMA
9DFapQf71AafkX8RjE3DYi6J+rl6PLWJ/OSyrUBGS1CEJc6HJS/uLsb020vumCnS
BsWkfGPSaBBp9ZaO/mIY97JiUrYlwwEFjbGSHnUCAwEAATANBgkqhkiG9w0BAQUF
AAOBgQCwDPHKtmuz4jLkEwP3CkfOL9+Q4LxhgUV7GtPm1XKIMN4VUey1NkFJUB5q
wJXY1I7ql/VtZLjV2mPhS1SZkMKdFZ5uTKEr/KqT9Fazib5mK4YXOvFpOcDNBvpK
X2SpoHffgXmdrExQshpIDzzofex0y/Kg4mulDQUPwVuIZtbnlQ==</source>
            <destination>cid:1352350650833</destination>
         </certificateMapping>
      </ns:setCertificateMapping>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://certificate.cpa.service.ebms.clockwork.nl/CertificateMappingService/SetCertificateMapping"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8a1ed4a5-2845-43d3-8cf2-1794015dfb9c" wsaVersion="NONE" name="URLMappingServiceSoapBinding" type="wsdl" bindingName="{http://www.ordina.nl/cpa/urlMapping/2.18}URLMappingServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/service/urlMapping?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/service/urlMapping?wsdl"><con:part><con:url>http://localhost:8080/service/urlMapping?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="URLMappingService" targetNamespace="http://www.ordina.nl/cpa/urlMapping/2.18" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.ordina.nl/cpa/urlMapping/2.18" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.ordina.nl/cpa/urlMapping/2.18" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="deleteURLMapping" type="tns:deleteURLMapping"/>
      <xs:element name="deleteURLMappingResponse" type="tns:deleteURLMappingResponse"/>
      <xs:element name="getURLMappings" type="tns:getURLMappings"/>
      <xs:element name="getURLMappingsResponse" type="tns:getURLMappingsResponse"/>
      <xs:element name="setURLMapping" type="tns:setURLMapping"/>
      <xs:element name="setURLMappingResponse" type="tns:setURLMappingResponse"/>
      <xs:complexType name="setURLMapping">
        <xs:sequence>
          <xs:element name="urlMapping" type="tns:urlMapping"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="urlMapping">
        <xs:sequence>
          <xs:element name="source" type="xs:string"/>
          <xs:element name="destination" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setURLMappingResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getURLMappings">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getURLMappingsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="url" type="tns:urlMapping"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteURLMapping">
        <xs:sequence>
          <xs:element name="sourceURL" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteURLMappingResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="URLMappingServiceException" type="tns:URLMappingServiceException"/>
      <xs:complexType name="URLMappingServiceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="setURLMappingResponse">
    <wsdl:part element="tns:setURLMappingResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="URLMappingServiceException">
    <wsdl:part element="tns:URLMappingServiceException" name="URLMappingServiceException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteURLMappingResponse">
    <wsdl:part element="tns:deleteURLMappingResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setURLMapping">
    <wsdl:part element="tns:setURLMapping" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getURLMappingsResponse">
    <wsdl:part element="tns:getURLMappingsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getURLMappings">
    <wsdl:part element="tns:getURLMappings" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteURLMapping">
    <wsdl:part element="tns:deleteURLMapping" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="UrlMappingService">
    <wsdl:operation name="setURLMapping">
      <wsdl:input message="tns:setURLMapping" name="setURLMapping"></wsdl:input>
      <wsdl:output message="tns:setURLMappingResponse" name="setURLMappingResponse"></wsdl:output>
      <wsdl:fault message="tns:URLMappingServiceException" name="URLMappingServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getURLMappings">
      <wsdl:input message="tns:getURLMappings" name="getURLMappings"></wsdl:input>
      <wsdl:output message="tns:getURLMappingsResponse" name="getURLMappingsResponse"></wsdl:output>
      <wsdl:fault message="tns:URLMappingServiceException" name="URLMappingServiceException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteURLMapping">
      <wsdl:input message="tns:deleteURLMapping" name="deleteURLMapping"></wsdl:input>
      <wsdl:output message="tns:deleteURLMappingResponse" name="deleteURLMappingResponse"></wsdl:output>
      <wsdl:fault message="tns:URLMappingServiceException" name="URLMappingServiceException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="URLMappingServiceSoapBinding" type="tns:UrlMappingService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="setURLMapping">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setURLMapping">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setURLMappingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="URLMappingServiceException">
        <soap:fault name="URLMappingServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getURLMappings">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getURLMappings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getURLMappingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="URLMappingServiceException">
        <soap:fault name="URLMappingServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteURLMapping">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteURLMapping">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteURLMappingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="URLMappingServiceException">
        <soap:fault name="URLMappingServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="URLMappingService">
    <wsdl:port binding="tns:URLMappingServiceSoapBinding" name="URLMappingPort">
      <soap:address location="http://localhost:8080/service/urlMapping"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/service/urlMapping</con:endpoint></con:endpoints><con:operation id="d0093dbc-4f68-4ede-8b44-d94230ea7ed5" isOneWay="false" action="" name="deleteURLMapping" bindingOperationName="deleteURLMapping" type="Request-Response" outputName="deleteURLMappingResponse" inputName="deleteURLMapping" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7df83e2e-f4c0-416c-b158-0a6415e5a7fe" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/urlMapping</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/urlMapping/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:deleteURLMapping>
         <sourceURL>http://www.a.com</sourceURL>
      </ns:deleteURLMapping>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://url.cpa.service.ebms.clockwork.nl/URLMappingService/DeleteURLMapping"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="eb9d1188-6d1e-46be-9718-bac5e369d5a4" isOneWay="false" action="" name="getURLMappings" bindingOperationName="getURLMappings" type="Request-Response" outputName="getURLMappingsResponse" inputName="getURLMappings" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="97dc50db-4d93-417c-840d-4110150672b6" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/urlMapping</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/urlMapping/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getURLMappings/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://url.cpa.service.ebms.clockwork.nl/URLMappingService/GetURLMappings"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="0ed0d0fc-53bb-46c2-a7b5-9f27b74d0d7b" isOneWay="false" action="" name="setURLMapping" bindingOperationName="setURLMapping" type="Request-Response" outputName="setURLMappingResponse" inputName="setURLMapping" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="50977fc8-3759-4b3c-ba94-beda4c2a15de" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/urlMapping</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/urlMapping/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:setURLMapping>
         <urlMapping>
            <source>http://www.a.com</source>
            <destination>http://www.b.com</destination>
         </urlMapping>
      </ns:setURLMapping>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://url.cpa.service.ebms.clockwork.nl/URLMappingService/SetURLMapping"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="d3ef2ce9-79c2-453d-9812-cc421918cf10" name="TestSuite EbMS Sync"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="bafa7153-5df5-4ce6-bb3d-dc40c2a25956" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase EbMS" searchProperties="true"><con:settings/><con:testStep type="request" name="insertCPA" id="b030077b-47c5-4424-9fa5-10db4fbe34ba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CPAServiceSoapBinding</con:interface><con:operation>insertCPA</con:operation><con:request name="insertCPA" id="ea8d1990-dc13-46b3-a016-82d50ab93d47"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/cpa</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/cpa/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:insertCPA>
         <cpa><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<tns:CollaborationProtocolAgreement xmlns:axsl="http://www.w3.org/1999/XSL/TransformAlias" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:functx="http://www.functx.com" xmlns:tns="http://www.oasis-open.org/committees/ebxml-cppa/schema/cpp-cpa-2_0.xsd" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.oasis-open.org/committees/ebxml-cppa/schema/cpp-cpa-2_0.xsd http://www.oasis-open.org/committees/ebxml-cppa/schema/cpp-cpa-2_0.xsd" tns:cpaid="cpaStubEBF.rm.http.unsigned.sync" tns:version="1.0">
	<tns:Status tns:value="agreed" />
	<tns:Start>2011-01-01T00:00:00Z</tns:Start>
	<tns:End>2023-01-01T00:00:00Z</tns:End>
	<tns:PartyInfo tns:partyName="Logius" tns:defaultMshChannelId="DIGIPOORT_defaultDeliveryChannel_ProfileBestEffortSigned" tns:defaultMshPackageId="MshSignalPackage">
		<tns:PartyId tns:type="urn:osb:oin">00000000000000000000</tns:PartyId>
		<tns:PartyRef xlink:href="" />
		<tns:CollaborationRole>
			<tns:ProcessSpecification tns:name="afleveren" tns:version="1.0" xlink:href="http://www.overheidsservicebus.nl/osr/Afleveren" tns:uuid="urn:overheidsservicebus.nl:osr:Afleveren:OsbAfleveren11$10" />
			<tns:Role tns:name="DIGIPOORT" xlink:href="http://www.overheidsservicebus.nl/osr/" />
			<tns:ServiceBinding>
				<tns:Service tns:type="urn:osb:services">osb:afleveren:1.1$1.0</tns:Service>
				<tns:CanSend>
					<tns:ThisPartyActionBinding tns:id="DIGIPOORT_S_Afleveren" tns:action="afleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>OVERHEID_R_Afleveren</tns:OtherPartyActionBinding>
				</tns:CanSend>
				<tns:CanReceive>
					<tns:ThisPartyActionBinding tns:id="DIGIPOORT_R_BevestigAfleveren" tns:action="bevestigAfleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>OVERHEID_S_BevestigAfleveren</tns:OtherPartyActionBinding>
				</tns:CanReceive>
			</tns:ServiceBinding>
		</tns:CollaborationRole>
		<tns:CollaborationRole>
			<tns:ProcessSpecification tns:name="aanleveren" tns:version="1.0" xlink:href="http://www.overheidsservicebus.nl/osr/Aanleveren" tns:uuid="urn:overheidsservicebus.nl:osr:Aanleveren:OsbAanleveren10$10" />
			<tns:Role tns:name="DIGIPOORT" xlink:href="http://www.overheidsservicebus.nl/osr/" />
			<tns:ServiceBinding>
				<tns:Service tns:type="urn:osb:services">osb:aanleveren:1.1$1.0</tns:Service>
				<tns:CanSend>
					<tns:ThisPartyActionBinding tns:id="DIGIPOORT_S_BevestigAanleveren" tns:action="bevestigAanleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>OVERHEID_R_BevestigAanleveren</tns:OtherPartyActionBinding>
				</tns:CanSend>
				<tns:CanReceive>
					<tns:ThisPartyActionBinding tns:id="DIGIPOORT_R_Aanleveren" tns:action="aanleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>OVERHEID_S_Aanleveren</tns:OtherPartyActionBinding>
				</tns:CanReceive>
			</tns:ServiceBinding>
		</tns:CollaborationRole>
		<tns:DeliveryChannel tns:channelId="DIGIPOORT_defaultDeliveryChannel_ProfileBestEffortSigned" tns:docExchangeId="DIGIPOORT_BestEffort" tns:transportId="DIGIPOORT_transport_HTTP">
			<tns:MessagingCharacteristics tns:syncReplyMode="signalsAndResponse" tns:ackRequested="never" tns:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" tns:ackSignatureRequested="never" tns:duplicateElimination="never" />
		</tns:DeliveryChannel>
		<tns:DeliveryChannel tns:channelId="DIGIPOORT_defaultDeliveryChannel_ProfileReliableMessaging" tns:docExchangeId="DIGIPOORT_ReliableMessaging" tns:transportId="DIGIPOORT_transport_HTTP">
			<tns:MessagingCharacteristics tns:syncReplyMode="signalsAndResponse" tns:ackRequested="always" tns:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" tns:ackSignatureRequested="never" tns:duplicateElimination="always" />
		</tns:DeliveryChannel>
		<tns:Transport tns:transportId="DIGIPOORT_transport_HTTP">
			<tns:TransportSender>
				<tns:TransportProtocol tns:version="1.1">HTTP</tns:TransportProtocol>
			</tns:TransportSender>
			<tns:TransportReceiver>
				<tns:TransportProtocol tns:version="1.1">HTTP</tns:TransportProtocol>
				<tns:Endpoint tns:uri="http://localhost:8888/ebms" tns:type="allPurpose" />
			</tns:TransportReceiver>
		</tns:Transport>
		<tns:DocExchange tns:docExchangeId="DIGIPOORT_BestEffort">
			<tns:ebXMLSenderBinding tns:version="2.0" />
			<tns:ebXMLReceiverBinding tns:version="2.0" />
		</tns:DocExchange>
		<tns:DocExchange tns:docExchangeId="DIGIPOORT_ReliableMessaging">
			<tns:ebXMLSenderBinding tns:version="2.0">
				<tns:ReliableMessaging>
					<tns:Retries>5</tns:Retries>
					<tns:RetryInterval>PT5M</tns:RetryInterval>
					<tns:MessageOrderSemantics>NotGuaranteed</tns:MessageOrderSemantics>
				</tns:ReliableMessaging>
				<tns:PersistDuration>PT30M</tns:PersistDuration>
			</tns:ebXMLSenderBinding>
			<tns:ebXMLReceiverBinding tns:version="2.0">
				<tns:ReliableMessaging>
					<tns:Retries>5</tns:Retries>
					<tns:RetryInterval>PT5M</tns:RetryInterval>
					<tns:MessageOrderSemantics>NotGuaranteed</tns:MessageOrderSemantics>
				</tns:ReliableMessaging>
				<tns:PersistDuration>PT30M</tns:PersistDuration>
			</tns:ebXMLReceiverBinding>
		</tns:DocExchange>
	</tns:PartyInfo>
	<tns:PartyInfo tns:partyName="Overheid" tns:defaultMshChannelId="OVERHEID_defaultDeliveryChannel_ProfileBestEffortSigned" tns:defaultMshPackageId="MshSignalPackage">
		<tns:PartyId tns:type="urn:osb:oin">00000000000000000001</tns:PartyId>
		<tns:PartyRef xlink:href="" />
		<tns:CollaborationRole>
			<tns:ProcessSpecification tns:name="afleveren" tns:version="1.0" xlink:href="http://www.overheidsservicebus.nl/osr/Afleveren" tns:uuid="urn:overheidsservicebus.nl:osr:Afleveren:OsbAfleveren11$10" />
			<tns:Role tns:name="OVERHEID" xlink:href="http://www.overheidsservicebus.nl/osr/" />
			<tns:ServiceBinding>
				<tns:Service tns:type="urn:osb:services">osb:afleveren:1.1$1.0</tns:Service>
				<tns:CanSend>
					<tns:ThisPartyActionBinding tns:id="OVERHEID_S_BevestigAfleveren" tns:action="bevestigAfleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>DIGIPOORT_R_BevestigAfleveren</tns:OtherPartyActionBinding>
				</tns:CanSend>
				<tns:CanReceive>
					<tns:ThisPartyActionBinding tns:id="OVERHEID_R_Afleveren" tns:action="afleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>DIGIPOORT_S_Afleveren</tns:OtherPartyActionBinding>
				</tns:CanReceive>
			</tns:ServiceBinding>
		</tns:CollaborationRole>
		<tns:CollaborationRole>
			<tns:ProcessSpecification tns:name="aanleveren" tns:version="1.0" xlink:href="http://www.overheidsservicebus.nl/osr/Aanleveren" tns:uuid="urn:overheidsservicebus.nl:osr:Aanleveren:OsbAanleveren10$10" />
			<tns:Role tns:name="OVERHEID" xlink:href="http://www.overheidsservicebus.nl/osr/" />
			<tns:ServiceBinding>
				<tns:Service tns:type="urn:osb:services">osb:aanleveren:1.1$1.0</tns:Service>
				<tns:CanSend>
					<tns:ThisPartyActionBinding tns:id="OVERHEID_S_Aanleveren" tns:action="aanleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>DIGIPOORT_R_Aanleveren</tns:OtherPartyActionBinding>
				</tns:CanSend>
				<tns:CanReceive>
					<tns:ThisPartyActionBinding tns:id="OVERHEID_R_BevestigAanleveren" tns:action="bevestigAanleveren" tns:packageId="XMLMessagePackage">
						<tns:BusinessTransactionCharacteristics tns:isAuthenticated="transient" tns:timeToPerform="P2D" tns:isAuthorizationRequired="true" tns:isConfidential="transient" tns:isIntelligibleCheckRequired="false" tns:isNonRepudiationReceiptRequired="false" tns:isNonRepudiationRequired="false" tns:isTamperProof="transient" />
						<tns:ChannelId>OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging</tns:ChannelId>
					</tns:ThisPartyActionBinding>
					<tns:OtherPartyActionBinding>DIGIPOORT_S_BevestigAanleveren</tns:OtherPartyActionBinding>
				</tns:CanReceive>
			</tns:ServiceBinding>
		</tns:CollaborationRole>
		<tns:DeliveryChannel tns:channelId="OVERHEID_defaultDeliveryChannel_ProfileBestEffortSigned" tns:docExchangeId="OVERHEID_BestEffort" tns:transportId="OVERHEID_transport_HTTP">
			<tns:MessagingCharacteristics tns:syncReplyMode="signalsAndResponse" tns:ackRequested="never" tns:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" tns:ackSignatureRequested="never" tns:duplicateElimination="never" />
		</tns:DeliveryChannel>
		<tns:DeliveryChannel tns:channelId="OVERHEID_defaultDeliveryChannel_ProfileReliableMessaging" tns:docExchangeId="OVERHEID_ReliableMessaging" tns:transportId="OVERHEID_transport_HTTP">
			<tns:MessagingCharacteristics tns:syncReplyMode="signalsAndResponse" tns:ackRequested="always" tns:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" tns:ackSignatureRequested="never" tns:duplicateElimination="always" />
		</tns:DeliveryChannel>
		<tns:Transport tns:transportId="OVERHEID_transport_HTTP">
			<tns:TransportSender>
				<tns:TransportProtocol tns:version="1.1">HTTP</tns:TransportProtocol>
			</tns:TransportSender>
			<tns:TransportReceiver>
				<tns:TransportProtocol tns:version="1.1">HTTP</tns:TransportProtocol>
				<tns:Endpoint tns:uri="http://localhost:8088/ebms" tns:type="allPurpose" />
			</tns:TransportReceiver>
		</tns:Transport>
		<tns:DocExchange tns:docExchangeId="OVERHEID_BestEffort">
			<tns:ebXMLSenderBinding tns:version="2.0" />
			<tns:ebXMLReceiverBinding tns:version="2.0" />
		</tns:DocExchange>
		<tns:DocExchange tns:docExchangeId="OVERHEID_ReliableMessaging">
			<tns:ebXMLSenderBinding tns:version="2.0">
				<tns:ReliableMessaging>
					<tns:Retries>5</tns:Retries>
					<tns:RetryInterval>PT5M</tns:RetryInterval>
					<tns:MessageOrderSemantics>NotGuaranteed</tns:MessageOrderSemantics>
				</tns:ReliableMessaging>
				<tns:PersistDuration>PT30M</tns:PersistDuration>
			</tns:ebXMLSenderBinding>
			<tns:ebXMLReceiverBinding tns:version="2.0">
				<tns:ReliableMessaging>
					<tns:Retries>5</tns:Retries>
					<tns:RetryInterval>PT5M</tns:RetryInterval>
					<tns:MessageOrderSemantics>NotGuaranteed</tns:MessageOrderSemantics>
				</tns:ReliableMessaging>
				<tns:PersistDuration>PT30M</tns:PersistDuration>
			</tns:ebXMLReceiverBinding>
		</tns:DocExchange>
	</tns:PartyInfo>
	<tns:SimplePart tns:id="MsgHdr" tns:mimetype="text/xml">
		<tns:NamespaceSupported tns:location="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" tns:version="2.0">http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd</tns:NamespaceSupported>
	</tns:SimplePart>
	<tns:SimplePart tns:id="XMLMsg" tns:mimetype="application/xml" />
	<tns:Packaging tns:id="MshSignalPackage">
		<tns:ProcessingCapabilities tns:parse="true" tns:generate="true" />
		<tns:CompositeList>
			<tns:Composite tns:id="MshSignal" tns:mimetype="multipart/related" tns:mimeparameters="type=text/xml">
				<tns:Constituent tns:idref="MsgHdr" />
			</tns:Composite>
		</tns:CompositeList>
	</tns:Packaging>
	<tns:Packaging tns:id="XMLMessagePackage">
		<tns:ProcessingCapabilities tns:parse="true" tns:generate="true" />
		<tns:CompositeList>
			<tns:Composite tns:id="Message" tns:mimetype="multipart/related" tns:mimeparameters="type=text/xml">
				<tns:Constituent tns:idref="MsgHdr" />
				<tns:Constituent tns:idref="XMLMsg" />
			</tns:Composite>
		</tns:CompositeList>
	</tns:Packaging>
</tns:CollaborationProtocolAgreement>]]]]>><![CDATA[</cpa>
         <overwrite>true</overwrite>
      </ns:insertCPA>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="79282250-da6a-447e-adfe-3415bb0ff165"/><con:assertion type="XPath Match" id="888f88aa-0288-4032-a336-05090c2785cb" name="XPath Match"><con:configuration><path>//cpaId</path><content>cpaStubEBF.rm.http.unsigned.sync</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="MessageProperties" id="e9d437ce-c4dd-4811-8c92-1557d6bef896"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>uuid</con:name><con:value>${=java.util.UUID.randomUUID()}</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX").format(new Date(System.currentTimeMillis() + 3600 * 1000))}</con:value></con:property><con:property><con:name>timestampExpired</con:name><con:value>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX").format(new Date(System.currentTimeMillis() - 3600 * 1000))}</con:value></con:property><con:property><con:name>cpaId</con:name><con:value>cpaStubEBF.rm.http.unsigned.sync</con:value></con:property><con:property><con:name>partyType</con:name><con:value>urn:osb:oin</con:value></con:property><con:property><con:name>fromPartyId</con:name><con:value>00000000000000000000</con:value></con:property><con:property><con:name>fromRole</con:name><con:value>DIGIPOORT</con:value></con:property><con:property><con:name>toPartyId</con:name><con:value>00000000000000000001</con:value></con:property><con:property><con:name>toRole</con:name><con:value>OVERHEID</con:value></con:property><con:property><con:name>service</con:name><con:value>osb:afleveren:1.1$1.0</con:value></con:property><con:property><con:name>serviceType</con:name><con:value>urn:osb:services</con:value></con:property><con:property><con:name>action</con:name><con:value>afleveren</con:value></con:property><con:property><con:name>mshService</con:name><con:value>urn:oasis:names:tc:ebxml-msg:service</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="EbMSPing" id="1e2bd6b0-008f-43a1-9bb1-6bf0de3c1758"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSMSHRequestSync</con:operation><con:request name="EbMSPing" id="63c309bb-eedc-4698-8d64-182348caea67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000000</eb:PartyId>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000001</eb:PartyId>
            </eb:To>
            <eb:CPAId>cpaStubEBF.rm.http.unsigned.sync</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service>urn:oasis:names:tc:ebxml-msg:service</eb:Service>
            <eb:Action>Ping</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="8b1a6d24-eada-44a8-8dd4-628955fde333" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="65f2935a-1fea-4e45-8abd-acc74b13f59e" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="e0810f98-108b-4ac3-bea7-ebbdcc12c92b" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="4ea5ff61-97e6-47b5-8a0c-73a878a00348" name="SOAP Response"/><con:assertion type="XPath Match" id="5d9899bf-5e38-46e6-8768-6e394f9fd6be" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSPing#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ae340c57-3e0a-420a-829c-11119ef4d63b" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c7a3f80d-da16-488d-ae5e-ee4861768539" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="0d7b2960-ec50-4ff5-8f66-d10c115d6023" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="33b1076c-7bfd-40d1-b1ee-c3de6062ea4d" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>Pong</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9bab8f8-5cf3-435b-92e7-1956d71996e5" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="07cca6c3-edcd-477b-a548-83efce647990" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalid" id="ce6876db-a689-42d3-ad81-01d2f368f9e8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalid" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="SOAPAction" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" id="a824f385-ecd5-4692-9dcd-9e3bb4d876fe" name="SOAP Fault"/><con:assertion type="XPath Match" id="f524339e-3364-4107-8bd2-b49e445157bf" name="XPath Match faultcode"><con:configuration><path>declare namespace ns1="http://schemas.xmlsoap.org/soap/envelope/";
//faultcode</path><content>ns1:Client</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="474d19bc-d615-45ff-9878-8ff715d8c9fc" name="XPath Match faultstring"><con:configuration><path>//faultstring</path><content>Unable to process message! SOAPAction=</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageOk" id="944d2c77-f342-4c98-b863-e2df9faa1ee2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageOk" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="b81942c6-9cf6-44f7-99a1-99171cbc241e" name="SOAP Response"/><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Acknowledgment"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Acknowledgment)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageOk#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>Acknowledgment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Acknowledgment From Party"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Acknowledgment/eb:From/eb:PartyId</path><content>${EbMSMessageOk#Request#//eb:To/eb:PartyId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate Acknowledgment RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:Acknowledgment/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageStatus" id="921b9831-c97c-4e72-83b6-3052f1b651bd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSMSHRequestSync</con:operation><con:request name="EbMSMessageStatus" id="63c309bb-eedc-4698-8d64-182348caea67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000000</eb:PartyId>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000001</eb:PartyId>
            </eb:To>
            <eb:CPAId>cpaStubEBF.rm.http.unsigned.sync</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service>urn:oasis:names:tc:ebxml-msg:service</eb:Service>
            <eb:Action>StatusRequest</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:StatusRequest eb:version="2.0">
            <eb:RefToMessageId>${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}</eb:RefToMessageId>
        </eb:StatusRequest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="8b1a6d24-eada-44a8-8dd4-628955fde333" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="65f2935a-1fea-4e45-8abd-acc74b13f59e" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="e0810f98-108b-4ac3-bea7-ebbdcc12c92b" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="4ea5ff61-97e6-47b5-8a0c-73a878a00348" name="SOAP Response"/><con:assertion type="XPath Match" id="5d9899bf-5e38-46e6-8768-6e394f9fd6be" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSPing#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ae340c57-3e0a-420a-829c-11119ef4d63b" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c7a3f80d-da16-488d-ae5e-ee4861768539" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="0d7b2960-ec50-4ff5-8f66-d10c115d6023" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="33b1076c-7bfd-40d1-b1ee-c3de6062ea4d" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>StatusResponse</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9bab8f8-5cf3-435b-92e7-1956d71996e5" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="07cca6c3-edcd-477b-a548-83efce647990" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="5d9899bf-5e38-46e6-8768-6e394f9fd6be" name="XPath Match messageStatus"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:StatusResponse/@eb:messageStatus</path><content>Received</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="5d9899bf-5e38-46e6-8768-6e394f9fd6be" name="XPath Match RefToMessageId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:StatusResponse/eb:RefToMessageId</path><content>${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getMessageIds" id="e8a5f3a1-7e97-4657-a501-615870b2ff61"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMSMessageServiceSoapBinding</con:interface><con:operation>getUnprocessedMessageIds</con:operation><con:request name="getMessageIds" id="2a476bfb-02bb-43c0-a5b6-f0c7082730f0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getUnprocessedMessageIds>
         <messageFilter>
            <cpaId>${MessageProperties#cpaId}</cpaId>
            <fromParty>
               <partyId>${MessageProperties#partyType}:${MessageProperties#fromPartyId}</partyId>
               <role>${MessageProperties#fromRole}</role>
            </fromParty>
            <toParty>
               <partyId>${MessageProperties#partyType}:${MessageProperties#toPartyId}</partyId>
               <role>${MessageProperties#toRole}</role>
            </toParty>
            <service>${MessageProperties#serviceType}:${MessageProperties#service}</service>
            <action>${MessageProperties#action}</action>
         </messageFilter>
      </ns:getUnprocessedMessageIds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a9b13e02-3133-4e27-941e-eecbdaadea27"/><con:assertion type="XPath Match" id="41f96659-f043-4bd3-930d-885847adbc62" name="XPath Match MessageId"><con:configuration><path>exists(//messageId[text() = '${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getMessage" id="9b7fa06c-43d8-4d5f-a59d-2f81ae0bb306"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMSMessageServiceSoapBinding</con:interface><con:operation>getMessage</con:operation><con:request name="getMessage" id="62c2ad06-a042-4adc-b72a-c8d187970035"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getMessage>
         <messageId>${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}</messageId>
      </ns:getMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9f8fc5e1-2c56-4ff5-b6a5-b7dece002dc3"/><con:assertion type="XPath Match" id="2bd19582-f97d-422c-8cc2-594d411626e5" name="XPath Match"><con:configuration><path>exists(//messageId[text() = '${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="processMessage" id="c1ac6af3-2905-415e-bfd6-e267cd006d33"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMSMessageServiceSoapBinding</con:interface><con:operation>processMessage</con:operation><con:request name="processMessage" id="960d90a2-6481-4dcb-b826-382049f12188"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:processMessage>
         <messageId>${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}</messageId>
      </ns:processMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e8b4a47c-65af-43ba-8811-101be1eaff48"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageStatusAgain" id="765039f1-09ae-4ba9-afaa-d9768d0fd180"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSMSHRequestSync</con:operation><con:request name="EbMSMessageStatusAgain" id="63c309bb-eedc-4698-8d64-182348caea67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000000</eb:PartyId>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000001</eb:PartyId>
            </eb:To>
            <eb:CPAId>cpaStubEBF.rm.http.unsigned.sync</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service>urn:oasis:names:tc:ebxml-msg:service</eb:Service>
            <eb:Action>StatusRequest</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:StatusRequest eb:version="2.0">
            <eb:RefToMessageId>${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}</eb:RefToMessageId>
        </eb:StatusRequest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="8b1a6d24-eada-44a8-8dd4-628955fde333" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="65f2935a-1fea-4e45-8abd-acc74b13f59e" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="e0810f98-108b-4ac3-bea7-ebbdcc12c92b" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="4ea5ff61-97e6-47b5-8a0c-73a878a00348" name="SOAP Response"/><con:assertion type="XPath Match" id="5d9899bf-5e38-46e6-8768-6e394f9fd6be" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSPing#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ae340c57-3e0a-420a-829c-11119ef4d63b" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c7a3f80d-da16-488d-ae5e-ee4861768539" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="0d7b2960-ec50-4ff5-8f66-d10c115d6023" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="33b1076c-7bfd-40d1-b1ee-c3de6062ea4d" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>StatusResponse</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9bab8f8-5cf3-435b-92e7-1956d71996e5" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="07cca6c3-edcd-477b-a548-83efce647990" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="5d9899bf-5e38-46e6-8768-6e394f9fd6be" name="XPath Match messageStatus"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:StatusResponse/@eb:messageStatus</path><content>Processed</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="5d9899bf-5e38-46e6-8768-6e394f9fd6be" name="XPath Match RefToMessageId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:StatusResponse/eb:RefToMessageId</path><content>${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getMessageIdsAgain" id="e2181283-43fb-4320-babc-f4f36436a48f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMSMessageServiceSoapBinding</con:interface><con:operation>getUnprocessedMessageIds</con:operation><con:request name="getMessageIdsAgain" id="2a476bfb-02bb-43c0-a5b6-f0c7082730f0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/service/ebms</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.ordina.nl/ebms/2.18">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getUnprocessedMessageIds>
         <messageFilter>
            <cpaId>${MessageProperties#cpaId}</cpaId>
            <fromParty>
               <partyId>${MessageProperties#partyType}:${MessageProperties#fromPartyId}</partyId>
               <role>${MessageProperties#fromRole}</role>
            </fromParty>
            <toParty>
               <partyId>${MessageProperties#partyType}:${MessageProperties#toPartyId}</partyId>
               <role>${MessageProperties#toRole}</role>
            </toParty>
            <service>${MessageProperties#serviceType}:${MessageProperties#service}</service>
            <action>${MessageProperties#action}</action>
         </messageFilter>
      </ns:getUnprocessedMessageIds>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a9b13e02-3133-4e27-941e-eecbdaadea27"/><con:assertion type="XPath Match" id="41f96659-f043-4bd3-930d-885847adbc62" name="XPath Match MessageId"><con:configuration><path>exists(//messageId[text() = '${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}'])</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageDuplicate" id="2e1eb1d7-5b6d-47bd-99a7-c13ec5d614ab"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageDuplicate" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${EbMSMessageOk#Response#//eb:ConversationId}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${EbMSMessageOk#Response#//eb:MessageData/eb:RefToMessageId}</eb:MessageId>
                <eb:Timestamp>${EbMSMessageOk#Response#//eb:Timestamp}</eb:Timestamp>
                <eb:TimeToLive>${EbMSMessageOk#Request#//eb:TimeToLive}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="b81942c6-9cf6-44f7-99a1-99171cbc241e" name="SOAP Response"/><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Acknowledgment"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Acknowledgment)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageDuplicate#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>Acknowledgment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Acknowledgment From Party"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Acknowledgment/eb:From/eb:PartyId</path><content>${EbMSMessageDuplicate#Request#//eb:To/eb:PartyId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="694604ca-d493-48ff-acaa-df2e38887a1e" name="Validate Acknowledgment RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:Acknowledgment/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Validate Duplicate Response" id="ae94e56d-ac22-4e3f-ad66-ef16e3455d68"><con:settings/><con:config><script>def id1 = context.expand('${EbMSMessageOk#Response#/*}')
def id2 = context.expand('${EbMSMessageDuplicate#Response#/*}')
assert id1 == id2
</script></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidMessageHeaderVersion" id="b131c2e9-9311-42c4-8091-81f29f86270d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidMessageHeaderVersion" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="1.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/@version'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/@version']/eb:Description</path><content>Invalid value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidCPAId" id="a500cdcb-a3c2-4a94-850a-bd23959c5465" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidCPAId" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toPartyId}</eb:Role>
            </eb:To>
            <eb:CPAId>cpaId</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidCPAId2" id="0d404fba-b7df-4c66-aa58-389f1a6ec80d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidCPAId2" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toPartyId}</eb:Role>
            </eb:To>
            <eb:CPAId>cpaId</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" id="856a163b-ec60-427d-8a5b-32e1b945c969" name="SOAP Fault"/><con:assertion type="XPath Match" id="f745560a-d261-4f12-9479-241f89ce0387" name="XPath Match faultcode"><con:configuration><path>declare namespace ns1="http://schemas.xmlsoap.org/soap/envelope/";
//faultcode</path><content>ns1:Client</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="8f376fef-c7b1-40ee-8673-7a6396fc0095" name="XPath Match faultstring"><con:configuration><path>//faultstring</path><content>CPA cpaId not found!</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidFromPartyId" id="1f45cab5-7deb-4cf7-8b74-47735972c90d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidFromPartyId" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">fromPartyId</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/From/PartyId'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/From/PartyId']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidFromPartyType" id="08ed6631-927f-45a7-83eb-9a1f310a4bf6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidFromPartyType" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="type">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/From/PartyId'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/From/PartyId']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageMissingFromPartyId" id="5c693aaf-4d4c-4298-a140-fe23edeacaf4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageMissingFromPartyId" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b87553c3-bc59-415e-b08b-6960610acdd7" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.hasResponse() == false</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidFromRole" id="e6fd3f5d-d071-41b0-b7d2-3291c30124a1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidFromRole" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>fromRole</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageMissingFromRole" id="58d24c34-62e0-4248-8773-2d92b8ece906"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageMissingFromRole" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/From/Role'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/From/Role']/eb:Description</path><content>Invalid value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidToPartyId" id="b19a7aa1-2254-4457-b2c4-ede7f5cf4ea2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidToPartyId" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">toPartyId</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidToPartyType" id="3f6c7490-58df-4040-9699-7f82f993281b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidToPartyType" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="type">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidToRole" id="9d17e9e1-4411-409c-bdf0-5b3edbc220c8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidToRole" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>toRole</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidService" id="f2ff9669-9455-43e6-a866-9b7d242c2992"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidService" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">service</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidServiceType" id="78210f05-ea5f-4702-aac8-7047f458b1c2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidServiceType" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="type">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidAction" id="47c476f4-7309-4f93-ab87-8a01da268567"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidAction" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>action</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/Action']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidRefToMessageId" id="7e9e20a4-3f2b-4fac-a8fc-7d38117c8216"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidRefToMessageId" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:RefToMessageId>@localhost</eb:RefToMessageId>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/MessageData/RefToMessageId'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'ValueNotRecognized' and @eb:location='//Header/MessageHeader/MessageData/RefToMessageId']/eb:Description</path><content>Value not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageTimetoLiveExpired" id="1e1e4ea3-c0a5-4f44-906c-79f777b3d28f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageTimetoLiveExpired" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestampExpired}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestampExpired}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="9eebe6eb-98e3-489a-b3da-0125baf42398" name="SOAP Response"/><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageTimetoLiveExpired#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a10df834-0d69-4e8c-891c-ea9ba2c6a939" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="aaca3a00-91e9-401f-9721-f20621eeb49e" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d0a66876-1406-43ff-928a-72b4b1c25bec" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b5335cff-5e8f-484a-881a-f9eb781e2f8c" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:codeContext='urn:oasis:names:tc:ebxml-msg:service:errors' and @eb:errorCode = 'TimeToLiveExpired' and @eb:location='//Header/MessageHeader/MessageData/TimeToLive'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode1" disabled="true"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error/@eb:errorCode = 'TimeToLiveExpired')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageMissingDuplicateElimination" id="281fddfc-4cce-458d-ad0b-69955150d269"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageMissingDuplicateElimination" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/DuplicateElimination'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/MessageHeader/DuplicateElimination']/eb:Description</path><content>Wrong value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageMissingAckRequested" id="b8ea1558-94f5-4fa5-b070-b25af673fefe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageMissingAckRequested" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/AckRequested'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/AckRequested']/eb:Description</path><content>Wrong value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidAckRequestedVersion" id="2de8db18-b257-41f4-9feb-fd6b9f560137"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidAckRequestedVersion" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="1.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
     </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/AckRequested/@version'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/AckRequested/@version']/eb:Description</path><content>Invalid value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageNextMSHAckRequestedActor" id="0e8936e3-33fb-40f6-9737-5f58840ea031"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageNextMSHAckRequestedActor" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:nextMSH" soap:mustUnderstand="1"/>
     </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'NotSupported' and @eb:location='//Header/AckRequested/@actor'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'NotSupported' and @eb:location='//Header/AckRequested/@actor']/eb:Description</path><content>NextMSH not supported.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidAckRequestedActor" id="6f07d7a2-e5df-4842-82f7-6cf68753fabf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidAckRequestedActor" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="actor" soap:mustUnderstand="1"/>
     </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/AckRequested/@actor'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/AckRequested/@actor']/eb:Description</path><content>Invalid value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidAckRequestedSigned" id="614a874d-9275-40d8-832a-8208c4b0f5cf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidAckRequestedSigned" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="true" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
     </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/AckRequested/@signed'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/AckRequested/@signed']/eb:Description</path><content>Wrong value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageMissingSyncReply" id="7d8cb13c-2426-4a83-a083-e2f58af98af8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageMissingSyncReply" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/SyncReply'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/SyncReply']/eb:Description</path><content>Wrong value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidSyncReplyVersion" id="a816626d-ff07-453f-942b-be3ec5b97df2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidSyncReplyVersion" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="1.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
     </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/SyncReply/@version'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/SyncReply/@version']/eb:Description</path><content>Invalid value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidSyncReplyActor" id="6e6ff588-9580-42bb-a513-479b23d73432"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidSyncReplyActor" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="actor" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
     </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/SyncReply/@actor'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Header/SyncReply/@actor']/eb:Description</path><content>Wrong value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageMessageOrder" id="eeadf11a-5e90-4383-a84a-5697013d9e87"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageMessageOrder" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:MessageOrder eb:version="2.0" soap:mustUnderstand="1">
            <eb:SequenceNumber>00000001</eb:SequenceNumber>
        </eb:MessageOrder>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
     </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'NotSupported' and @eb:location='//Header/MessageOrder'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'NotSupported' and @eb:location='//Header/MessageOrder']/eb:Description</path><content>MessageOrder not supported.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageMissingManifest" id="86938b67-9eb3-40ab-bc10-9ab70c7118ca"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageMissingManifest" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body/>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="f477dcad-4ac8-4e3c-b163-396ac7016a3a" name="SOAP Response"/><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Acknowledgment"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Acknowledgment)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>Acknowledgment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Acknowledgment From Party"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Acknowledgment/eb:From/eb:PartyId</path><content>${EbMSMessageOk#Request#//eb:To/eb:PartyId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="1baf640b-9b66-40a7-b3ad-dd8208c5b27f" name="Validate Acknowledgment RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:Acknowledgment/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidManifestVersion" id="523cfbb7-ff3c-4cc5-bc16-ce284e5f082e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidManifestVersion" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="1.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Body/Manifest/@version'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'Inconsistent' and @eb:location='//Body/Manifest/@version']/eb:Description</path><content>Invalid value.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidCID" id="eac925d6-65c8-4aa3-90e7-b932ad4ca281"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidCID" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'MimeProblem' and @eb:location='//Body/Manifest/Reference[@href=''ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost'']'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'MimeProblem' and @eb:location='//Body/Manifest/Reference[@href=''ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost'']']/eb:Description</path><content>URI cannot be resolved.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageUnknownCID" id="3aba0c8d-77bd-42fe-bd95-735c55d3574f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageUnknownCID" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:cid" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'MimeProblem' and @eb:location='cid:cid'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'MimeProblem' and @eb:location='cid:cid']/eb:Description</path><content>MIME part not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageMissingReference" id="04f7270a-1c0a-43b1-88a2-0a22360d9d57"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageMissingReference" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0"/>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f077d644-aa30-4796-9323-562d7f44c1fa" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.hasResponse() == false</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSMessageInvalidReference" id="d0574011-9aeb-4063-ad43-7ccb4eaec68b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSRequestSync</con:operation><con:request name="EbMSMessageInvalidReference" id="fc387b4c-1d5b-4b27-9a3a-554d0d6b0655"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#fromPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#fromRole}</eb:Role>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="${MessageProperties#partyType}">${MessageProperties#toPartyId}</eb:PartyId>
                <eb:Role>${MessageProperties#toRole}</eb:Role>
            </eb:To>
            <eb:CPAId>${MessageProperties#cpaId}</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}</eb:ConversationId>
            <eb:Service eb:type="${MessageProperties#serviceType}">${MessageProperties#service}</eb:Service>
            <eb:Action>${MessageProperties#action}</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
            <eb:DuplicateElimination/>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
        <eb:AckRequested eb:signed="false" eb:version="2.0" soap:actor="urn:oasis:names:tc:ebxml-msg:actor:toPartyMSH" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
        <eb:Manifest eb:version="2.0">
            <eb:Reference xlink:href="cid:ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost" xlink:type="simple"/>
            <eb:Reference xlink:href="cid:cid" xlink:type="simple"/>
        </eb:Manifest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="aefce411-2748-4d41-89ca-5ac70be362c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate Content-Type"><con:configuration><scriptText>assert messageExchange.responseHeaders["Content-Type"].get(0).equals("text/xml")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b8452248-9b6a-47cf-8e87-8476f598a8b5" name="Validate SOAPAction"><con:configuration><scriptText>assert messageExchange.responseHeaders["SOAPAction"].get(0).equals("\"ebXML\"")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="9d0e1f3d-bd16-4053-8a44-a2e19b9f3167" name="XPath Exists Error"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
boolean(//eb:Error)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match CPAId"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:CPAId</path><content>${EbMSMessageInvalidFromPartyId#Request#//eb:CPAId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87c1c6d0-c35f-4d82-873f-716b34345d73" name="Validate From Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:From/eb:PartyId"] == request["//eb:MessageHeader/eb:To/eb:PartyId"]
assert response["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9537949-7679-4524-b665-64dd163797de" name="Validate To Party"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageHeader/eb:To/eb:PartyId"] == request["//eb:MessageHeader/eb:From/eb:PartyId"]
assert response["//eb:MessageHeader/eb:To/eb:PartyId/@eb:type"] == request["//eb:MessageHeader/eb:From/eb:PartyId/@eb:type"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Service"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Service</path><content>urn:oasis:names:tc:ebxml-msg:service</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Action"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Action</path><content>MessageError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9cb9bac4-0efc-4325-a3c1-727f98266952" name="Validate ConversationId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:ConversationId"] == request["//eb:ConversationId"]
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4bfd8ea8-7476-43e5-b563-a357ff6fc9f5" name="Validate RefToMessageId"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def request = new XmlHolder(messageExchange.requestContentAsXml)
request.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"
def response = new XmlHolder(messageExchange.responseContentAsXml)
response.namespaces["eb"] = "http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd"

assert response["//eb:MessageData/eb:RefToMessageId"] == request["//eb:MessageData/eb:MessageId"]
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match ErrorCode"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
exists(//eb:Error[@eb:errorCode = 'MimeProblem' and @eb:location='cid:cid'])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c4f7fa20-fd5c-48a7-9066-98c3081293b1" name="XPath Match Error Description"><con:configuration><path>declare namespace eb='http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd';
//eb:Error[@eb:errorCode = 'MimeProblem' and @eb:location='cid:cid']/eb:Description</path><content>MIME part not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Afleverbericht_Afleveren_ebMS_2.0_v1.1.xml</con:name><con:contentType>text/xml</con:contentType><con:size>1189</con:size><con:contentId>ea1b1df9-3cf8-4362-8cb5-06da082dfae5-1@localhost</con:contentId><con:data>UEsDBBQACAgIAPZaa0gAAAAAAAAAAAAAAAAqAAAAQWZsZXZlcmJlcmljaHRfQWZsZXZlcmVuX2ViTVNfMi4wX3YxLjEueG1snVTBitswED230H8wvseSs1BKSLwkh5aF3V6SltJLkK2prV1pZCwlcfv1lS3bsb0s2y0YzLx58+Y9S3h9WysZnKEyQuMmjCMaBoCZ5gLzTfjt8HnxKbxNPrxfWzQr9kuCo+6gEllhg9qIlckKUOxeZ8y2AoW15YoQqXNxMhFKwkUuSq0rSyBVhiwjSjoZA9VZZEDiKCbB1mOAR0gf9kdHO55dI6oNDwNn0W13Dv5bv9dwlgeNy+USXW4iXeVkSWlMfjzc79s0C4HGMswgdMHftcmfABVUT0n3XpMx2JNS/11M4yYZF54+ac9meqlpOZmbb2MM25g9Pqv97JzUD1vxyI0FVYLcMsyhJfFkSeOPCxq750Dpqn0i+tNLvTDSKwoOaIUFYXcgXb+ANAXk0BA8A0/KeUj8y2t20ECxv0tIdvuv3camavTJawva4UrLWecZ4pWeE2encYeFPvGrLSUUHBozpWQCiYW6O9KhMVBTaK4ON8iYSqwrIlsP5z9qDQPC7+Jfvv/h282myzoYmFyBq6+x2514lCwHHJnwSAu8JcHbI/xThj7E1dUk1ch/d2knvxkH/wVQSwcIQQDI1bUBAAClBAAAUEsBAhQAFAAICAgA9lprSEEAyNW1AQAApQQAACoAAAAAAAAAAAAAAAAAAAAAAEFmbGV2ZXJiZXJpY2h0X0FmbGV2ZXJlbl9lYk1TXzIuMF92MS4xLnhtbFBLBQYAAAAAAQABAFgAAAANAgAAAAA=</con:data><con:id>2f9a9828-fc67-4aba-9f39-9f26cd202083</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EbMSPingXXE" id="17f02e96-7884-45c4-8c7e-51b732034f08"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EbMS</con:interface><con:operation>EbMSMSHRequestSync</con:operation><con:request name="EbMSPingXXE" id="63c309bb-eedc-4698-8d64-182348caea67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8888/ebms</con:endpoint><con:request><![CDATA[<!DOCTYPE aa[<!ELEMENT bb ANY><!ENTITY xxe SYSTEM "file:///etc/passwd">]>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink">
    <soap:Header>
        <eb:MessageHeader eb:version="2.0" soap:mustUnderstand="1">
            <eb:From>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000000</eb:PartyId>
            </eb:From>
            <eb:To>
                <eb:PartyId eb:type="urn:osb:oin">00000000000000000001</eb:PartyId>
            </eb:To>
            <eb:CPAId>cpaStubEBF.rm.http.unsigned.sync</eb:CPAId>
            <eb:ConversationId>${MessageProperties#uuid}&xxe;</eb:ConversationId>
            <eb:Service>urn:oasis:names:tc:ebxml-msg:service</eb:Service>
            <eb:Action>Ping</eb:Action>
            <eb:MessageData>
                <eb:MessageId>${MessageProperties#uuid}@localhost</eb:MessageId>
                <eb:Timestamp>${MessageProperties#timestamp}</eb:Timestamp>
                <eb:TimeToLive>${MessageProperties#timestamp}</eb:TimeToLive>
            </eb:MessageData>
        </eb:MessageHeader>
        <eb:SyncReply eb:version="2.0" soap:actor="http://schemas.xmlsoap.org/soap/actor/next" soap:mustUnderstand="1"/>
    </soap:Header>
    <soap:Body>
    </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="d42248dd-86b6-44c4-85ce-aa99c310f333" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5de59ad0-19d4-4672-aede-b317650e747a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.hasResponse() == false</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>